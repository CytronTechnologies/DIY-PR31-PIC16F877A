Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"89 PR31_final.c
[v _delay `(v ~T0 0 ef1`ul ]
"633 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _TRISA `Vuc ~T0 0 e@133 ]
"650
[v _TRISB `Vuc ~T0 0 e@134 ]
"688
[v _TRISD `Vuc ~T0 0 e@136 ]
"167
[v _PORTA `Vuc ~T0 0 e@5 ]
"184
[v _PORTB `Vuc ~T0 0 e@6 ]
"222
[v _PORTD `Vuc ~T0 0 e@8 ]
"93 PR31_final.c
[v _send_config `(v ~T0 0 ef1`uc ]
"104
[v _uart_init `(v ~T0 0 ef ]
"31 i2c_ar1000.h
[v _ar_i2c_initialize `(v ~T0 0 ef ]
"90 PR31_final.c
[v _ar1000_init `(v ~T0 0 ef ]
"98
[v _send_string `(v ~T0 0 ef1`*Cuc ]
"96
[v _lcd_goto `(v ~T0 0 ef1`uc ]
"107
[v _uart_sendstr `(v ~T0 0 ef1`*Cuc ]
"92
[v _set_vol `(v ~T0 0 ef1`uc ]
"97
[v _lcd_clr `(v ~T0 0 ef ]
"42 C:\Program Files (x86)\Microchip\xc8\v1.00\include\eeprom_routines.h
[v _eeprom_read `(uc ~T0 0 ef1`uc ]
"108 PR31_final.c
[v _eprom_write `(v ~T0 0 ef2`uc`ui ]
"1127 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB0 `Vb ~T0 0 e@48 ]
"110 PR31_final.c
[v _switch_channel `(v ~T0 0 ef ]
"101
[v _adjust_channel `(v ~T0 0 ef ]
"1128 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB1 `Vb ~T0 0 e@49 ]
"100 PR31_final.c
[v _adjust_vol `(v ~T0 0 ef ]
"105
[v _uart_tx `(v ~T0 0 ef1`uc ]
"94
[v _send_char `(v ~T0 0 ef1`uc ]
"109
[v _eprom_read `(ui ~T0 0 ef1`uc ]
"91
[v _setAR1000 `(v ~T0 0 ef1`ui ]
"99
[v _send_dec `(v ~T0 0 ef1`ul ]
"1130 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB3 `Vb ~T0 0 e@51 ]
"102 PR31_final.c
[v _decrease_chan `(v ~T0 0 ef ]
"1129 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB2 `Vb ~T0 0 e@50 ]
"103 PR31_final.c
[v _increase_chan `(v ~T0 0 ef ]
"85 i2c_ar1000.h
[v _ar_i2c_write `(v ~T0 0 ef3`uc`uc`ul ]
"67
[v _ar_i2c_read `(ui ~T0 0 ef2`uc`uc ]
"1131 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB4 `Vb ~T0 0 e@52 ]
"95 PR31_final.c
[v _e_pulse `(v ~T0 0 ef ]
"1132 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RB5 `Vb ~T0 0 e@53 ]
"1041
[v _BRGH `Vb ~T0 0 e@1218 ]
"891
[v _SPBRG `Vuc ~T0 0 e@153 ]
"1173
[v _SPEN `Vb ~T0 0 e@199 ]
"1074
[v _CREN `Vb ~T0 0 e@196 ]
"1246
[v _TXEN `Vb ~T0 0 e@1221 ]
"1228
[v _TRISC6 `Vb ~T0 0 e@1086 ]
"1229
[v _TRISC7 `Vb ~T0 0 e@1087 ]
"1248
[v _TXIF `Vb ~T0 0 e@100 ]
"506
[v _TXREG `Vuc ~T0 0 e@25 ]
"1107
[v _OERR `Vb ~T0 0 e@193 ]
"1150
[v _RCIF `Vb ~T0 0 e@101 ]
"515
[v _RCREG `Vuc ~T0 0 e@26 ]
"974
[v _EEADR `Vuc ~T0 0 e@269 ]
"1089
[v _EEPGD `Vb ~T0 0 e@3175 ]
"1151
[v _RD `Vb ~T0 0 e@3168 ]
"965
[v _EEDATA `Vuc ~T0 0 e@268 ]
"1252
[v _WREN `Vb ~T0 0 e@3170 ]
"1015
[v _EECON2 `Vuc ~T0 0 e@397 ]
"1251
[v _WR `Vb ~T0 0 e@3169 ]
[; ;pic16f877a.h: 104: extern volatile unsigned char INDF @ 0x000;
[; ;pic16f877a.h: 106: extern volatile union {
[; ;pic16f877a.h: 107: struct {
[; ;pic16f877a.h: 108: unsigned INDF :8;
[; ;pic16f877a.h: 109: };
[; ;pic16f877a.h: 110: } INDFbits @ 0x000;
[; ;pic16f877a.h: 113: extern volatile unsigned char TMR0 @ 0x001;
[; ;pic16f877a.h: 115: extern volatile union {
[; ;pic16f877a.h: 116: struct {
[; ;pic16f877a.h: 117: unsigned TMR0 :8;
[; ;pic16f877a.h: 118: };
[; ;pic16f877a.h: 119: } TMR0bits @ 0x001;
[; ;pic16f877a.h: 122: extern volatile unsigned char PCL @ 0x002;
[; ;pic16f877a.h: 124: extern volatile union {
[; ;pic16f877a.h: 125: struct {
[; ;pic16f877a.h: 126: unsigned PCL :8;
[; ;pic16f877a.h: 127: };
[; ;pic16f877a.h: 128: } PCLbits @ 0x002;
[; ;pic16f877a.h: 131: extern volatile unsigned char STATUS @ 0x003;
[; ;pic16f877a.h: 133: extern volatile union {
[; ;pic16f877a.h: 134: struct {
[; ;pic16f877a.h: 135: unsigned C :1;
[; ;pic16f877a.h: 136: unsigned DC :1;
[; ;pic16f877a.h: 137: unsigned Z :1;
[; ;pic16f877a.h: 138: unsigned nPD :1;
[; ;pic16f877a.h: 139: unsigned nTO :1;
[; ;pic16f877a.h: 140: unsigned RP :2;
[; ;pic16f877a.h: 141: unsigned IRP :1;
[; ;pic16f877a.h: 142: };
[; ;pic16f877a.h: 143: struct {
[; ;pic16f877a.h: 144: unsigned :5;
[; ;pic16f877a.h: 145: unsigned RP0 :1;
[; ;pic16f877a.h: 146: unsigned RP1 :1;
[; ;pic16f877a.h: 147: };
[; ;pic16f877a.h: 148: struct {
[; ;pic16f877a.h: 149: unsigned CARRY :1;
[; ;pic16f877a.h: 150: };
[; ;pic16f877a.h: 151: struct {
[; ;pic16f877a.h: 152: unsigned :2;
[; ;pic16f877a.h: 153: unsigned ZERO :1;
[; ;pic16f877a.h: 154: };
[; ;pic16f877a.h: 155: } STATUSbits @ 0x003;
[; ;pic16f877a.h: 158: extern volatile unsigned char FSR @ 0x004;
[; ;pic16f877a.h: 160: extern volatile union {
[; ;pic16f877a.h: 161: struct {
[; ;pic16f877a.h: 162: unsigned FSR :8;
[; ;pic16f877a.h: 163: };
[; ;pic16f877a.h: 164: } FSRbits @ 0x004;
[; ;pic16f877a.h: 167: extern volatile unsigned char PORTA @ 0x005;
[; ;pic16f877a.h: 169: extern volatile union {
[; ;pic16f877a.h: 170: struct {
[; ;pic16f877a.h: 171: unsigned RA0 :1;
[; ;pic16f877a.h: 172: unsigned RA1 :1;
[; ;pic16f877a.h: 173: unsigned RA2 :1;
[; ;pic16f877a.h: 174: unsigned RA3 :1;
[; ;pic16f877a.h: 175: unsigned RA4 :1;
[; ;pic16f877a.h: 176: unsigned RA5 :1;
[; ;pic16f877a.h: 177: };
[; ;pic16f877a.h: 178: struct {
[; ;pic16f877a.h: 179: unsigned RA :8;
[; ;pic16f877a.h: 180: };
[; ;pic16f877a.h: 181: } PORTAbits @ 0x005;
[; ;pic16f877a.h: 184: extern volatile unsigned char PORTB @ 0x006;
[; ;pic16f877a.h: 186: extern volatile union {
[; ;pic16f877a.h: 187: struct {
[; ;pic16f877a.h: 188: unsigned RB0 :1;
[; ;pic16f877a.h: 189: unsigned RB1 :1;
[; ;pic16f877a.h: 190: unsigned RB2 :1;
[; ;pic16f877a.h: 191: unsigned RB3 :1;
[; ;pic16f877a.h: 192: unsigned RB4 :1;
[; ;pic16f877a.h: 193: unsigned RB5 :1;
[; ;pic16f877a.h: 194: unsigned RB6 :1;
[; ;pic16f877a.h: 195: unsigned RB7 :1;
[; ;pic16f877a.h: 196: };
[; ;pic16f877a.h: 197: struct {
[; ;pic16f877a.h: 198: unsigned RB :8;
[; ;pic16f877a.h: 199: };
[; ;pic16f877a.h: 200: } PORTBbits @ 0x006;
[; ;pic16f877a.h: 203: extern volatile unsigned char PORTC @ 0x007;
[; ;pic16f877a.h: 205: extern volatile union {
[; ;pic16f877a.h: 206: struct {
[; ;pic16f877a.h: 207: unsigned RC0 :1;
[; ;pic16f877a.h: 208: unsigned RC1 :1;
[; ;pic16f877a.h: 209: unsigned RC2 :1;
[; ;pic16f877a.h: 210: unsigned RC3 :1;
[; ;pic16f877a.h: 211: unsigned RC4 :1;
[; ;pic16f877a.h: 212: unsigned RC5 :1;
[; ;pic16f877a.h: 213: unsigned RC6 :1;
[; ;pic16f877a.h: 214: unsigned RC7 :1;
[; ;pic16f877a.h: 215: };
[; ;pic16f877a.h: 216: struct {
[; ;pic16f877a.h: 217: unsigned RC :8;
[; ;pic16f877a.h: 218: };
[; ;pic16f877a.h: 219: } PORTCbits @ 0x007;
[; ;pic16f877a.h: 222: extern volatile unsigned char PORTD @ 0x008;
[; ;pic16f877a.h: 224: extern volatile union {
[; ;pic16f877a.h: 225: struct {
[; ;pic16f877a.h: 226: unsigned RD0 :1;
[; ;pic16f877a.h: 227: unsigned RD1 :1;
[; ;pic16f877a.h: 228: unsigned RD2 :1;
[; ;pic16f877a.h: 229: unsigned RD3 :1;
[; ;pic16f877a.h: 230: unsigned RD4 :1;
[; ;pic16f877a.h: 231: unsigned RD5 :1;
[; ;pic16f877a.h: 232: unsigned RD6 :1;
[; ;pic16f877a.h: 233: unsigned RD7 :1;
[; ;pic16f877a.h: 234: };
[; ;pic16f877a.h: 235: struct {
[; ;pic16f877a.h: 236: unsigned RD :8;
[; ;pic16f877a.h: 237: };
[; ;pic16f877a.h: 238: } PORTDbits @ 0x008;
[; ;pic16f877a.h: 241: extern volatile unsigned char PORTE @ 0x009;
[; ;pic16f877a.h: 243: extern volatile union {
[; ;pic16f877a.h: 244: struct {
[; ;pic16f877a.h: 245: unsigned RE0 :1;
[; ;pic16f877a.h: 246: unsigned RE1 :1;
[; ;pic16f877a.h: 247: unsigned RE2 :1;
[; ;pic16f877a.h: 248: };
[; ;pic16f877a.h: 249: struct {
[; ;pic16f877a.h: 250: unsigned RE :8;
[; ;pic16f877a.h: 251: };
[; ;pic16f877a.h: 252: } PORTEbits @ 0x009;
[; ;pic16f877a.h: 255: extern volatile unsigned char PCLATH @ 0x00A;
[; ;pic16f877a.h: 257: extern volatile union {
[; ;pic16f877a.h: 258: struct {
[; ;pic16f877a.h: 259: unsigned PCLATH :5;
[; ;pic16f877a.h: 260: };
[; ;pic16f877a.h: 261: } PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 264: extern volatile unsigned char INTCON @ 0x00B;
[; ;pic16f877a.h: 266: extern volatile union {
[; ;pic16f877a.h: 267: struct {
[; ;pic16f877a.h: 268: unsigned RBIF :1;
[; ;pic16f877a.h: 269: unsigned INTF :1;
[; ;pic16f877a.h: 270: unsigned TMR0IF :1;
[; ;pic16f877a.h: 271: unsigned RBIE :1;
[; ;pic16f877a.h: 272: unsigned INTE :1;
[; ;pic16f877a.h: 273: unsigned TMR0IE :1;
[; ;pic16f877a.h: 274: unsigned PEIE :1;
[; ;pic16f877a.h: 275: unsigned GIE :1;
[; ;pic16f877a.h: 276: };
[; ;pic16f877a.h: 277: struct {
[; ;pic16f877a.h: 278: unsigned :2;
[; ;pic16f877a.h: 279: unsigned T0IF :1;
[; ;pic16f877a.h: 280: unsigned :2;
[; ;pic16f877a.h: 281: unsigned T0IE :1;
[; ;pic16f877a.h: 282: };
[; ;pic16f877a.h: 283: } INTCONbits @ 0x00B;
[; ;pic16f877a.h: 286: extern volatile unsigned char PIR1 @ 0x00C;
[; ;pic16f877a.h: 288: extern volatile union {
[; ;pic16f877a.h: 289: struct {
[; ;pic16f877a.h: 290: unsigned TMR1IF :1;
[; ;pic16f877a.h: 291: unsigned TMR2IF :1;
[; ;pic16f877a.h: 292: unsigned CCP1IF :1;
[; ;pic16f877a.h: 293: unsigned SSPIF :1;
[; ;pic16f877a.h: 294: unsigned TXIF :1;
[; ;pic16f877a.h: 295: unsigned RCIF :1;
[; ;pic16f877a.h: 296: unsigned ADIF :1;
[; ;pic16f877a.h: 297: unsigned PSPIF :1;
[; ;pic16f877a.h: 298: };
[; ;pic16f877a.h: 299: struct {
[; ;pic16f877a.h: 300: unsigned TMR1IF :1;
[; ;pic16f877a.h: 301: unsigned TMR2IF :1;
[; ;pic16f877a.h: 302: unsigned CCP1IF :1;
[; ;pic16f877a.h: 303: unsigned SSPIF :1;
[; ;pic16f877a.h: 304: unsigned :2;
[; ;pic16f877a.h: 305: unsigned ADIF :1;
[; ;pic16f877a.h: 306: unsigned PSPIF :1;
[; ;pic16f877a.h: 307: };
[; ;pic16f877a.h: 308: } PIR1bits @ 0x00C;
[; ;pic16f877a.h: 311: extern volatile unsigned char PIR2 @ 0x00D;
[; ;pic16f877a.h: 313: extern volatile union {
[; ;pic16f877a.h: 314: struct {
[; ;pic16f877a.h: 315: unsigned CCP2IF :1;
[; ;pic16f877a.h: 316: unsigned :2;
[; ;pic16f877a.h: 317: unsigned BCLIF :1;
[; ;pic16f877a.h: 318: unsigned EEIF :1;
[; ;pic16f877a.h: 319: unsigned :1;
[; ;pic16f877a.h: 320: unsigned CMIF :1;
[; ;pic16f877a.h: 321: };
[; ;pic16f877a.h: 322: } PIR2bits @ 0x00D;
[; ;pic16f877a.h: 325: extern volatile unsigned short TMR1 @ 0x00E;
[; ;pic16f877a.h: 327: extern volatile union {
[; ;pic16f877a.h: 328: struct {
[; ;pic16f877a.h: 329: unsigned TMR1 :16;
[; ;pic16f877a.h: 330: };
[; ;pic16f877a.h: 331: } TMR1bits @ 0x00E;
[; ;pic16f877a.h: 334: extern volatile unsigned char TMR1L @ 0x00E;
[; ;pic16f877a.h: 336: extern volatile union {
[; ;pic16f877a.h: 337: struct {
[; ;pic16f877a.h: 338: unsigned TMR1L :8;
[; ;pic16f877a.h: 339: };
[; ;pic16f877a.h: 340: } TMR1Lbits @ 0x00E;
[; ;pic16f877a.h: 343: extern volatile unsigned char TMR1H @ 0x00F;
[; ;pic16f877a.h: 345: extern volatile union {
[; ;pic16f877a.h: 346: struct {
[; ;pic16f877a.h: 347: unsigned TMR1H :8;
[; ;pic16f877a.h: 348: };
[; ;pic16f877a.h: 349: } TMR1Hbits @ 0x00F;
[; ;pic16f877a.h: 352: extern volatile unsigned char T1CON @ 0x010;
[; ;pic16f877a.h: 354: extern volatile union {
[; ;pic16f877a.h: 355: struct {
[; ;pic16f877a.h: 356: unsigned TMR1ON :1;
[; ;pic16f877a.h: 357: unsigned TMR1CS :1;
[; ;pic16f877a.h: 358: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 359: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 360: unsigned T1CKPS :2;
[; ;pic16f877a.h: 361: };
[; ;pic16f877a.h: 362: struct {
[; ;pic16f877a.h: 363: unsigned :2;
[; ;pic16f877a.h: 364: unsigned T1SYNC :1;
[; ;pic16f877a.h: 365: unsigned :1;
[; ;pic16f877a.h: 366: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 367: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 368: };
[; ;pic16f877a.h: 369: struct {
[; ;pic16f877a.h: 370: unsigned :2;
[; ;pic16f877a.h: 371: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 372: };
[; ;pic16f877a.h: 373: } T1CONbits @ 0x010;
[; ;pic16f877a.h: 376: extern volatile unsigned char TMR2 @ 0x011;
[; ;pic16f877a.h: 378: extern volatile union {
[; ;pic16f877a.h: 379: struct {
[; ;pic16f877a.h: 380: unsigned TMR2 :8;
[; ;pic16f877a.h: 381: };
[; ;pic16f877a.h: 382: } TMR2bits @ 0x011;
[; ;pic16f877a.h: 385: extern volatile unsigned char T2CON @ 0x012;
[; ;pic16f877a.h: 387: extern volatile union {
[; ;pic16f877a.h: 388: struct {
[; ;pic16f877a.h: 389: unsigned T2CKPS :2;
[; ;pic16f877a.h: 390: unsigned TMR2ON :1;
[; ;pic16f877a.h: 391: unsigned TOUTPS :4;
[; ;pic16f877a.h: 392: };
[; ;pic16f877a.h: 393: struct {
[; ;pic16f877a.h: 394: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 395: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 396: unsigned :1;
[; ;pic16f877a.h: 397: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 398: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 399: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 400: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 401: };
[; ;pic16f877a.h: 402: } T2CONbits @ 0x012;
[; ;pic16f877a.h: 405: extern volatile unsigned char SSPBUF @ 0x013;
[; ;pic16f877a.h: 407: extern volatile union {
[; ;pic16f877a.h: 408: struct {
[; ;pic16f877a.h: 409: unsigned SSPBUF :8;
[; ;pic16f877a.h: 410: };
[; ;pic16f877a.h: 411: } SSPBUFbits @ 0x013;
[; ;pic16f877a.h: 414: extern volatile unsigned char SSPCON @ 0x014;
[; ;pic16f877a.h: 416: extern volatile union {
[; ;pic16f877a.h: 417: struct {
[; ;pic16f877a.h: 418: unsigned SSPM :4;
[; ;pic16f877a.h: 419: unsigned CKP :1;
[; ;pic16f877a.h: 420: unsigned SSPEN :1;
[; ;pic16f877a.h: 421: unsigned SSPOV :1;
[; ;pic16f877a.h: 422: unsigned WCOL :1;
[; ;pic16f877a.h: 423: };
[; ;pic16f877a.h: 424: struct {
[; ;pic16f877a.h: 425: unsigned SSPM0 :1;
[; ;pic16f877a.h: 426: unsigned SSPM1 :1;
[; ;pic16f877a.h: 427: unsigned SSPM2 :1;
[; ;pic16f877a.h: 428: unsigned SSPM3 :1;
[; ;pic16f877a.h: 429: };
[; ;pic16f877a.h: 430: } SSPCONbits @ 0x014;
[; ;pic16f877a.h: 433: extern volatile unsigned short CCPR1 @ 0x015;
[; ;pic16f877a.h: 435: extern volatile union {
[; ;pic16f877a.h: 436: struct {
[; ;pic16f877a.h: 437: unsigned CCPR1 :16;
[; ;pic16f877a.h: 438: };
[; ;pic16f877a.h: 439: } CCPR1bits @ 0x015;
[; ;pic16f877a.h: 442: extern volatile unsigned char CCPR1L @ 0x015;
[; ;pic16f877a.h: 444: extern volatile union {
[; ;pic16f877a.h: 445: struct {
[; ;pic16f877a.h: 446: unsigned CCPR1L :8;
[; ;pic16f877a.h: 447: };
[; ;pic16f877a.h: 448: } CCPR1Lbits @ 0x015;
[; ;pic16f877a.h: 451: extern volatile unsigned char CCPR1H @ 0x016;
[; ;pic16f877a.h: 453: extern volatile union {
[; ;pic16f877a.h: 454: struct {
[; ;pic16f877a.h: 455: unsigned CCPR1H :8;
[; ;pic16f877a.h: 456: };
[; ;pic16f877a.h: 457: } CCPR1Hbits @ 0x016;
[; ;pic16f877a.h: 460: extern volatile unsigned char CCP1CON @ 0x017;
[; ;pic16f877a.h: 462: extern volatile union {
[; ;pic16f877a.h: 463: struct {
[; ;pic16f877a.h: 464: unsigned CCP1M :4;
[; ;pic16f877a.h: 465: unsigned CCP1Y :1;
[; ;pic16f877a.h: 466: unsigned CCP1X :1;
[; ;pic16f877a.h: 467: };
[; ;pic16f877a.h: 468: struct {
[; ;pic16f877a.h: 469: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 470: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 471: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 472: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 473: };
[; ;pic16f877a.h: 474: } CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 477: extern volatile unsigned char RCSTA @ 0x018;
[; ;pic16f877a.h: 479: extern volatile union {
[; ;pic16f877a.h: 480: struct {
[; ;pic16f877a.h: 481: unsigned RX9D :1;
[; ;pic16f877a.h: 482: unsigned OERR :1;
[; ;pic16f877a.h: 483: unsigned FERR :1;
[; ;pic16f877a.h: 484: unsigned ADDEN :1;
[; ;pic16f877a.h: 485: unsigned CREN :1;
[; ;pic16f877a.h: 486: unsigned SREN :1;
[; ;pic16f877a.h: 487: unsigned RX9 :1;
[; ;pic16f877a.h: 488: unsigned SPEN :1;
[; ;pic16f877a.h: 489: };
[; ;pic16f877a.h: 490: struct {
[; ;pic16f877a.h: 491: unsigned RCD8 :1;
[; ;pic16f877a.h: 492: unsigned :5;
[; ;pic16f877a.h: 493: unsigned RC9 :1;
[; ;pic16f877a.h: 494: };
[; ;pic16f877a.h: 495: struct {
[; ;pic16f877a.h: 496: unsigned :6;
[; ;pic16f877a.h: 497: unsigned nRC8 :1;
[; ;pic16f877a.h: 498: };
[; ;pic16f877a.h: 499: struct {
[; ;pic16f877a.h: 500: unsigned :6;
[; ;pic16f877a.h: 501: unsigned RC8_9 :1;
[; ;pic16f877a.h: 502: };
[; ;pic16f877a.h: 503: } RCSTAbits @ 0x018;
[; ;pic16f877a.h: 506: extern volatile unsigned char TXREG @ 0x019;
[; ;pic16f877a.h: 508: extern volatile union {
[; ;pic16f877a.h: 509: struct {
[; ;pic16f877a.h: 510: unsigned TXREG :8;
[; ;pic16f877a.h: 511: };
[; ;pic16f877a.h: 512: } TXREGbits @ 0x019;
[; ;pic16f877a.h: 515: extern volatile unsigned char RCREG @ 0x01A;
[; ;pic16f877a.h: 517: extern volatile union {
[; ;pic16f877a.h: 518: struct {
[; ;pic16f877a.h: 519: unsigned RCREG :8;
[; ;pic16f877a.h: 520: };
[; ;pic16f877a.h: 521: } RCREGbits @ 0x01A;
[; ;pic16f877a.h: 524: extern volatile unsigned short CCPR2 @ 0x01B;
[; ;pic16f877a.h: 526: extern volatile union {
[; ;pic16f877a.h: 527: struct {
[; ;pic16f877a.h: 528: unsigned CCPR2 :16;
[; ;pic16f877a.h: 529: };
[; ;pic16f877a.h: 530: } CCPR2bits @ 0x01B;
[; ;pic16f877a.h: 533: extern volatile unsigned char CCPR2L @ 0x01B;
[; ;pic16f877a.h: 535: extern volatile union {
[; ;pic16f877a.h: 536: struct {
[; ;pic16f877a.h: 537: unsigned CCPR2L :8;
[; ;pic16f877a.h: 538: };
[; ;pic16f877a.h: 539: } CCPR2Lbits @ 0x01B;
[; ;pic16f877a.h: 542: extern volatile unsigned char CCPR2H @ 0x01C;
[; ;pic16f877a.h: 544: extern volatile union {
[; ;pic16f877a.h: 545: struct {
[; ;pic16f877a.h: 546: unsigned CCPR2H :8;
[; ;pic16f877a.h: 547: };
[; ;pic16f877a.h: 548: } CCPR2Hbits @ 0x01C;
[; ;pic16f877a.h: 551: extern volatile unsigned char CCP2CON @ 0x01D;
[; ;pic16f877a.h: 553: extern volatile union {
[; ;pic16f877a.h: 554: struct {
[; ;pic16f877a.h: 555: unsigned CCP2M :4;
[; ;pic16f877a.h: 556: unsigned CCP2Y :1;
[; ;pic16f877a.h: 557: unsigned CCP2X :1;
[; ;pic16f877a.h: 558: };
[; ;pic16f877a.h: 559: struct {
[; ;pic16f877a.h: 560: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 561: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 562: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 563: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 564: };
[; ;pic16f877a.h: 565: } CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 568: extern volatile unsigned char ADRESH @ 0x01E;
[; ;pic16f877a.h: 570: extern volatile union {
[; ;pic16f877a.h: 571: struct {
[; ;pic16f877a.h: 572: unsigned ADRESH :8;
[; ;pic16f877a.h: 573: };
[; ;pic16f877a.h: 574: } ADRESHbits @ 0x01E;
[; ;pic16f877a.h: 577: extern volatile unsigned char ADCON0 @ 0x01F;
[; ;pic16f877a.h: 579: extern volatile union {
[; ;pic16f877a.h: 580: struct {
[; ;pic16f877a.h: 581: unsigned ADON :1;
[; ;pic16f877a.h: 582: unsigned :1;
[; ;pic16f877a.h: 583: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 584: unsigned CHS :3;
[; ;pic16f877a.h: 585: unsigned ADCS :2;
[; ;pic16f877a.h: 586: };
[; ;pic16f877a.h: 587: struct {
[; ;pic16f877a.h: 588: unsigned ADON :1;
[; ;pic16f877a.h: 589: unsigned :1;
[; ;pic16f877a.h: 590: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 591: unsigned CHS :3;
[; ;pic16f877a.h: 592: unsigned ADCS :2;
[; ;pic16f877a.h: 593: };
[; ;pic16f877a.h: 594: struct {
[; ;pic16f877a.h: 595: unsigned :2;
[; ;pic16f877a.h: 596: unsigned GO :1;
[; ;pic16f877a.h: 597: unsigned CHS0 :1;
[; ;pic16f877a.h: 598: unsigned CHS1 :1;
[; ;pic16f877a.h: 599: unsigned CHS2 :1;
[; ;pic16f877a.h: 600: unsigned ADCS0 :1;
[; ;pic16f877a.h: 601: unsigned ADCS1 :1;
[; ;pic16f877a.h: 602: };
[; ;pic16f877a.h: 603: struct {
[; ;pic16f877a.h: 604: unsigned :2;
[; ;pic16f877a.h: 605: unsigned nDONE :1;
[; ;pic16f877a.h: 606: };
[; ;pic16f877a.h: 607: struct {
[; ;pic16f877a.h: 608: unsigned :2;
[; ;pic16f877a.h: 609: unsigned GO_DONE :1;
[; ;pic16f877a.h: 610: };
[; ;pic16f877a.h: 611: } ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 614: extern volatile unsigned char OPTION_REG @ 0x081;
[; ;pic16f877a.h: 616: extern volatile union {
[; ;pic16f877a.h: 617: struct {
[; ;pic16f877a.h: 618: unsigned PS :3;
[; ;pic16f877a.h: 619: unsigned PSA :1;
[; ;pic16f877a.h: 620: unsigned T0SE :1;
[; ;pic16f877a.h: 621: unsigned T0CS :1;
[; ;pic16f877a.h: 622: unsigned INTEDG :1;
[; ;pic16f877a.h: 623: unsigned nRBPU :1;
[; ;pic16f877a.h: 624: };
[; ;pic16f877a.h: 625: struct {
[; ;pic16f877a.h: 626: unsigned PS0 :1;
[; ;pic16f877a.h: 627: unsigned PS1 :1;
[; ;pic16f877a.h: 628: unsigned PS2 :1;
[; ;pic16f877a.h: 629: };
[; ;pic16f877a.h: 630: } OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 633: extern volatile unsigned char TRISA @ 0x085;
[; ;pic16f877a.h: 635: extern volatile union {
[; ;pic16f877a.h: 636: struct {
[; ;pic16f877a.h: 637: unsigned TRISA0 :1;
[; ;pic16f877a.h: 638: unsigned TRISA1 :1;
[; ;pic16f877a.h: 639: unsigned TRISA2 :1;
[; ;pic16f877a.h: 640: unsigned TRISA3 :1;
[; ;pic16f877a.h: 641: unsigned TRISA4 :1;
[; ;pic16f877a.h: 642: unsigned TRISA5 :1;
[; ;pic16f877a.h: 643: };
[; ;pic16f877a.h: 644: struct {
[; ;pic16f877a.h: 645: unsigned TRISA :8;
[; ;pic16f877a.h: 646: };
[; ;pic16f877a.h: 647: } TRISAbits @ 0x085;
[; ;pic16f877a.h: 650: extern volatile unsigned char TRISB @ 0x086;
[; ;pic16f877a.h: 652: extern volatile union {
[; ;pic16f877a.h: 653: struct {
[; ;pic16f877a.h: 654: unsigned TRISB0 :1;
[; ;pic16f877a.h: 655: unsigned TRISB1 :1;
[; ;pic16f877a.h: 656: unsigned TRISB2 :1;
[; ;pic16f877a.h: 657: unsigned TRISB3 :1;
[; ;pic16f877a.h: 658: unsigned TRISB4 :1;
[; ;pic16f877a.h: 659: unsigned TRISB5 :1;
[; ;pic16f877a.h: 660: unsigned TRISB6 :1;
[; ;pic16f877a.h: 661: unsigned TRISB7 :1;
[; ;pic16f877a.h: 662: };
[; ;pic16f877a.h: 663: struct {
[; ;pic16f877a.h: 664: unsigned TRISB :8;
[; ;pic16f877a.h: 665: };
[; ;pic16f877a.h: 666: } TRISBbits @ 0x086;
[; ;pic16f877a.h: 669: extern volatile unsigned char TRISC @ 0x087;
[; ;pic16f877a.h: 671: extern volatile union {
[; ;pic16f877a.h: 672: struct {
[; ;pic16f877a.h: 673: unsigned TRISC0 :1;
[; ;pic16f877a.h: 674: unsigned TRISC1 :1;
[; ;pic16f877a.h: 675: unsigned TRISC2 :1;
[; ;pic16f877a.h: 676: unsigned TRISC3 :1;
[; ;pic16f877a.h: 677: unsigned TRISC4 :1;
[; ;pic16f877a.h: 678: unsigned TRISC5 :1;
[; ;pic16f877a.h: 679: unsigned TRISC6 :1;
[; ;pic16f877a.h: 680: unsigned TRISC7 :1;
[; ;pic16f877a.h: 681: };
[; ;pic16f877a.h: 682: struct {
[; ;pic16f877a.h: 683: unsigned TRISC :8;
[; ;pic16f877a.h: 684: };
[; ;pic16f877a.h: 685: } TRISCbits @ 0x087;
[; ;pic16f877a.h: 688: extern volatile unsigned char TRISD @ 0x088;
[; ;pic16f877a.h: 690: extern volatile union {
[; ;pic16f877a.h: 691: struct {
[; ;pic16f877a.h: 692: unsigned TRISD0 :1;
[; ;pic16f877a.h: 693: unsigned TRISD1 :1;
[; ;pic16f877a.h: 694: unsigned TRISD2 :1;
[; ;pic16f877a.h: 695: unsigned TRISD3 :1;
[; ;pic16f877a.h: 696: unsigned TRISD4 :1;
[; ;pic16f877a.h: 697: unsigned TRISD5 :1;
[; ;pic16f877a.h: 698: unsigned TRISD6 :1;
[; ;pic16f877a.h: 699: unsigned TRISD7 :1;
[; ;pic16f877a.h: 700: };
[; ;pic16f877a.h: 701: struct {
[; ;pic16f877a.h: 702: unsigned TRISD :8;
[; ;pic16f877a.h: 703: };
[; ;pic16f877a.h: 704: } TRISDbits @ 0x088;
[; ;pic16f877a.h: 707: extern volatile unsigned char TRISE @ 0x089;
[; ;pic16f877a.h: 709: extern volatile union {
[; ;pic16f877a.h: 710: struct {
[; ;pic16f877a.h: 711: unsigned TRISE0 :1;
[; ;pic16f877a.h: 712: unsigned TRISE1 :1;
[; ;pic16f877a.h: 713: unsigned TRISE2 :1;
[; ;pic16f877a.h: 714: unsigned :1;
[; ;pic16f877a.h: 715: unsigned PSPMODE :1;
[; ;pic16f877a.h: 716: unsigned IBOV :1;
[; ;pic16f877a.h: 717: unsigned OBF :1;
[; ;pic16f877a.h: 718: unsigned IBF :1;
[; ;pic16f877a.h: 719: };
[; ;pic16f877a.h: 720: struct {
[; ;pic16f877a.h: 721: unsigned TRISE :8;
[; ;pic16f877a.h: 722: };
[; ;pic16f877a.h: 723: } TRISEbits @ 0x089;
[; ;pic16f877a.h: 726: extern volatile unsigned char PIE1 @ 0x08C;
[; ;pic16f877a.h: 728: extern volatile union {
[; ;pic16f877a.h: 729: struct {
[; ;pic16f877a.h: 730: unsigned TMR1IE :1;
[; ;pic16f877a.h: 731: unsigned TMR2IE :1;
[; ;pic16f877a.h: 732: unsigned CCP1IE :1;
[; ;pic16f877a.h: 733: unsigned SSPIE :1;
[; ;pic16f877a.h: 734: unsigned TXIE :1;
[; ;pic16f877a.h: 735: unsigned RCIE :1;
[; ;pic16f877a.h: 736: unsigned ADIE :1;
[; ;pic16f877a.h: 737: unsigned PSPIE :1;
[; ;pic16f877a.h: 738: };
[; ;pic16f877a.h: 739: } PIE1bits @ 0x08C;
[; ;pic16f877a.h: 742: extern volatile unsigned char PIE2 @ 0x08D;
[; ;pic16f877a.h: 744: extern volatile union {
[; ;pic16f877a.h: 745: struct {
[; ;pic16f877a.h: 746: unsigned CCP2IE :1;
[; ;pic16f877a.h: 747: unsigned :2;
[; ;pic16f877a.h: 748: unsigned BCLIE :1;
[; ;pic16f877a.h: 749: unsigned EEIE :1;
[; ;pic16f877a.h: 750: unsigned :1;
[; ;pic16f877a.h: 751: unsigned CMIE :1;
[; ;pic16f877a.h: 752: };
[; ;pic16f877a.h: 753: } PIE2bits @ 0x08D;
[; ;pic16f877a.h: 756: extern volatile unsigned char PCON @ 0x08E;
[; ;pic16f877a.h: 758: extern volatile union {
[; ;pic16f877a.h: 759: struct {
[; ;pic16f877a.h: 760: unsigned nBOR :1;
[; ;pic16f877a.h: 761: unsigned nPOR :1;
[; ;pic16f877a.h: 762: };
[; ;pic16f877a.h: 763: struct {
[; ;pic16f877a.h: 764: unsigned nBO :1;
[; ;pic16f877a.h: 765: };
[; ;pic16f877a.h: 766: } PCONbits @ 0x08E;
[; ;pic16f877a.h: 769: extern volatile unsigned char SSPCON2 @ 0x091;
[; ;pic16f877a.h: 771: extern volatile union {
[; ;pic16f877a.h: 772: struct {
[; ;pic16f877a.h: 773: unsigned SEN :1;
[; ;pic16f877a.h: 774: unsigned RSEN :1;
[; ;pic16f877a.h: 775: unsigned PEN :1;
[; ;pic16f877a.h: 776: unsigned RCEN :1;
[; ;pic16f877a.h: 777: unsigned ACKEN :1;
[; ;pic16f877a.h: 778: unsigned ACKDT :1;
[; ;pic16f877a.h: 779: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 780: unsigned GCEN :1;
[; ;pic16f877a.h: 781: };
[; ;pic16f877a.h: 782: } SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 785: extern volatile unsigned char PR2 @ 0x092;
[; ;pic16f877a.h: 787: extern volatile union {
[; ;pic16f877a.h: 788: struct {
[; ;pic16f877a.h: 789: unsigned PR2 :8;
[; ;pic16f877a.h: 790: };
[; ;pic16f877a.h: 791: } PR2bits @ 0x092;
[; ;pic16f877a.h: 794: extern volatile unsigned char SSPADD @ 0x093;
[; ;pic16f877a.h: 796: extern volatile union {
[; ;pic16f877a.h: 797: struct {
[; ;pic16f877a.h: 798: unsigned SSPADD :8;
[; ;pic16f877a.h: 799: };
[; ;pic16f877a.h: 800: } SSPADDbits @ 0x093;
[; ;pic16f877a.h: 803: extern volatile unsigned char SSPSTAT @ 0x094;
[; ;pic16f877a.h: 805: extern volatile union {
[; ;pic16f877a.h: 806: struct {
[; ;pic16f877a.h: 807: unsigned BF :1;
[; ;pic16f877a.h: 808: unsigned UA :1;
[; ;pic16f877a.h: 809: unsigned R_nW :1;
[; ;pic16f877a.h: 810: unsigned S :1;
[; ;pic16f877a.h: 811: unsigned P :1;
[; ;pic16f877a.h: 812: unsigned D_nA :1;
[; ;pic16f877a.h: 813: unsigned CKE :1;
[; ;pic16f877a.h: 814: unsigned SMP :1;
[; ;pic16f877a.h: 815: };
[; ;pic16f877a.h: 816: struct {
[; ;pic16f877a.h: 817: unsigned BF :1;
[; ;pic16f877a.h: 818: unsigned UA :1;
[; ;pic16f877a.h: 819: unsigned R_nW :1;
[; ;pic16f877a.h: 820: unsigned S :1;
[; ;pic16f877a.h: 821: unsigned P :1;
[; ;pic16f877a.h: 822: unsigned D_nA :1;
[; ;pic16f877a.h: 823: unsigned CKE :1;
[; ;pic16f877a.h: 824: unsigned SMP :1;
[; ;pic16f877a.h: 825: };
[; ;pic16f877a.h: 826: struct {
[; ;pic16f877a.h: 827: unsigned :2;
[; ;pic16f877a.h: 828: unsigned R :1;
[; ;pic16f877a.h: 829: unsigned :2;
[; ;pic16f877a.h: 830: unsigned D :1;
[; ;pic16f877a.h: 831: };
[; ;pic16f877a.h: 832: struct {
[; ;pic16f877a.h: 833: unsigned :2;
[; ;pic16f877a.h: 834: unsigned I2C_READ :1;
[; ;pic16f877a.h: 835: unsigned I2C_START :1;
[; ;pic16f877a.h: 836: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 837: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 838: };
[; ;pic16f877a.h: 839: struct {
[; ;pic16f877a.h: 840: unsigned :2;
[; ;pic16f877a.h: 841: unsigned nW :1;
[; ;pic16f877a.h: 842: unsigned :2;
[; ;pic16f877a.h: 843: unsigned nA :1;
[; ;pic16f877a.h: 844: };
[; ;pic16f877a.h: 845: struct {
[; ;pic16f877a.h: 846: unsigned :2;
[; ;pic16f877a.h: 847: unsigned nWRITE :1;
[; ;pic16f877a.h: 848: unsigned :2;
[; ;pic16f877a.h: 849: unsigned nADDRESS :1;
[; ;pic16f877a.h: 850: };
[; ;pic16f877a.h: 851: struct {
[; ;pic16f877a.h: 852: unsigned :2;
[; ;pic16f877a.h: 853: unsigned R_W :1;
[; ;pic16f877a.h: 854: unsigned :2;
[; ;pic16f877a.h: 855: unsigned D_A :1;
[; ;pic16f877a.h: 856: };
[; ;pic16f877a.h: 857: struct {
[; ;pic16f877a.h: 858: unsigned :2;
[; ;pic16f877a.h: 859: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 860: unsigned :2;
[; ;pic16f877a.h: 861: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 862: };
[; ;pic16f877a.h: 863: } SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 866: extern volatile unsigned char TXSTA @ 0x098;
[; ;pic16f877a.h: 868: extern volatile union {
[; ;pic16f877a.h: 869: struct {
[; ;pic16f877a.h: 870: unsigned TX9D :1;
[; ;pic16f877a.h: 871: unsigned TRMT :1;
[; ;pic16f877a.h: 872: unsigned BRGH :1;
[; ;pic16f877a.h: 873: unsigned :1;
[; ;pic16f877a.h: 874: unsigned SYNC :1;
[; ;pic16f877a.h: 875: unsigned TXEN :1;
[; ;pic16f877a.h: 876: unsigned TX9 :1;
[; ;pic16f877a.h: 877: unsigned CSRC :1;
[; ;pic16f877a.h: 878: };
[; ;pic16f877a.h: 879: struct {
[; ;pic16f877a.h: 880: unsigned TXD8 :1;
[; ;pic16f877a.h: 881: unsigned :5;
[; ;pic16f877a.h: 882: unsigned nTX8 :1;
[; ;pic16f877a.h: 883: };
[; ;pic16f877a.h: 884: struct {
[; ;pic16f877a.h: 885: unsigned :6;
[; ;pic16f877a.h: 886: unsigned TX8_9 :1;
[; ;pic16f877a.h: 887: };
[; ;pic16f877a.h: 888: } TXSTAbits @ 0x098;
[; ;pic16f877a.h: 891: extern volatile unsigned char SPBRG @ 0x099;
[; ;pic16f877a.h: 893: extern volatile union {
[; ;pic16f877a.h: 894: struct {
[; ;pic16f877a.h: 895: unsigned SPBRG :8;
[; ;pic16f877a.h: 896: };
[; ;pic16f877a.h: 897: } SPBRGbits @ 0x099;
[; ;pic16f877a.h: 900: extern volatile unsigned char CMCON @ 0x09C;
[; ;pic16f877a.h: 902: extern volatile union {
[; ;pic16f877a.h: 903: struct {
[; ;pic16f877a.h: 904: unsigned CM :3;
[; ;pic16f877a.h: 905: unsigned CIS :1;
[; ;pic16f877a.h: 906: unsigned C1INV :1;
[; ;pic16f877a.h: 907: unsigned C2INV :1;
[; ;pic16f877a.h: 908: unsigned C1OUT :1;
[; ;pic16f877a.h: 909: unsigned C2OUT :1;
[; ;pic16f877a.h: 910: };
[; ;pic16f877a.h: 911: struct {
[; ;pic16f877a.h: 912: unsigned CM0 :1;
[; ;pic16f877a.h: 913: unsigned CM1 :1;
[; ;pic16f877a.h: 914: unsigned CM2 :1;
[; ;pic16f877a.h: 915: };
[; ;pic16f877a.h: 916: } CMCONbits @ 0x09C;
[; ;pic16f877a.h: 919: extern volatile unsigned char CVRCON @ 0x09D;
[; ;pic16f877a.h: 921: extern volatile union {
[; ;pic16f877a.h: 922: struct {
[; ;pic16f877a.h: 923: unsigned CVR :4;
[; ;pic16f877a.h: 924: unsigned :1;
[; ;pic16f877a.h: 925: unsigned CVRR :1;
[; ;pic16f877a.h: 926: unsigned CVROE :1;
[; ;pic16f877a.h: 927: unsigned CVREN :1;
[; ;pic16f877a.h: 928: };
[; ;pic16f877a.h: 929: struct {
[; ;pic16f877a.h: 930: unsigned CVR0 :1;
[; ;pic16f877a.h: 931: unsigned CVR1 :1;
[; ;pic16f877a.h: 932: unsigned CVR2 :1;
[; ;pic16f877a.h: 933: unsigned CVR3 :1;
[; ;pic16f877a.h: 934: };
[; ;pic16f877a.h: 935: } CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 938: extern volatile unsigned char ADRESL @ 0x09E;
[; ;pic16f877a.h: 940: extern volatile union {
[; ;pic16f877a.h: 941: struct {
[; ;pic16f877a.h: 942: unsigned ADRESL :8;
[; ;pic16f877a.h: 943: };
[; ;pic16f877a.h: 944: } ADRESLbits @ 0x09E;
[; ;pic16f877a.h: 947: extern volatile unsigned char ADCON1 @ 0x09F;
[; ;pic16f877a.h: 949: extern volatile union {
[; ;pic16f877a.h: 950: struct {
[; ;pic16f877a.h: 951: unsigned PCFG :4;
[; ;pic16f877a.h: 952: unsigned :2;
[; ;pic16f877a.h: 953: unsigned ADCS2 :1;
[; ;pic16f877a.h: 954: unsigned ADFM :1;
[; ;pic16f877a.h: 955: };
[; ;pic16f877a.h: 956: struct {
[; ;pic16f877a.h: 957: unsigned PCFG0 :1;
[; ;pic16f877a.h: 958: unsigned PCFG1 :1;
[; ;pic16f877a.h: 959: unsigned PCFG2 :1;
[; ;pic16f877a.h: 960: unsigned PCFG3 :1;
[; ;pic16f877a.h: 961: };
[; ;pic16f877a.h: 962: } ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 965: extern volatile unsigned char EEDATA @ 0x10C;
[; ;pic16f877a.h: 967: extern volatile union {
[; ;pic16f877a.h: 968: struct {
[; ;pic16f877a.h: 969: unsigned EEDATA :8;
[; ;pic16f877a.h: 970: };
[; ;pic16f877a.h: 971: } EEDATAbits @ 0x10C;
[; ;pic16f877a.h: 974: extern volatile unsigned char EEADR @ 0x10D;
[; ;pic16f877a.h: 976: extern volatile union {
[; ;pic16f877a.h: 977: struct {
[; ;pic16f877a.h: 978: unsigned EEADR :8;
[; ;pic16f877a.h: 979: };
[; ;pic16f877a.h: 980: } EEADRbits @ 0x10D;
[; ;pic16f877a.h: 983: extern volatile unsigned char EEDATH @ 0x10E;
[; ;pic16f877a.h: 985: extern volatile union {
[; ;pic16f877a.h: 986: struct {
[; ;pic16f877a.h: 987: unsigned EEDATH :6;
[; ;pic16f877a.h: 988: };
[; ;pic16f877a.h: 989: } EEDATHbits @ 0x10E;
[; ;pic16f877a.h: 992: extern volatile unsigned char EEADRH @ 0x10F;
[; ;pic16f877a.h: 994: extern volatile union {
[; ;pic16f877a.h: 995: struct {
[; ;pic16f877a.h: 996: unsigned EEADRH :5;
[; ;pic16f877a.h: 997: };
[; ;pic16f877a.h: 998: } EEADRHbits @ 0x10F;
[; ;pic16f877a.h: 1001: extern volatile unsigned char EECON1 @ 0x18C;
[; ;pic16f877a.h: 1003: extern volatile union {
[; ;pic16f877a.h: 1004: struct {
[; ;pic16f877a.h: 1005: unsigned RD :1;
[; ;pic16f877a.h: 1006: unsigned WR :1;
[; ;pic16f877a.h: 1007: unsigned WREN :1;
[; ;pic16f877a.h: 1008: unsigned WRERR :1;
[; ;pic16f877a.h: 1009: unsigned :3;
[; ;pic16f877a.h: 1010: unsigned EEPGD :1;
[; ;pic16f877a.h: 1011: };
[; ;pic16f877a.h: 1012: } EECON1bits @ 0x18C;
[; ;pic16f877a.h: 1015: extern volatile unsigned char EECON2 @ 0x18D;
[; ;pic16f877a.h: 1017: extern volatile union {
[; ;pic16f877a.h: 1018: struct {
[; ;pic16f877a.h: 1019: unsigned EECON2 :8;
[; ;pic16f877a.h: 1020: };
[; ;pic16f877a.h: 1021: } EECON2bits @ 0x18D;
[; ;pic16f877a.h: 1027: extern volatile bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 1028: extern volatile bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 1029: extern volatile bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 1030: extern volatile bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 1031: extern volatile bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 1032: extern volatile bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 1033: extern volatile bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 1034: extern volatile bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 1035: extern volatile bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 1036: extern volatile bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 1037: extern volatile bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 1038: extern volatile bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 1039: extern volatile bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 1040: extern volatile bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 1041: extern volatile bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 1042: extern volatile bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 1043: extern volatile bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 1044: extern volatile bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 1045: extern volatile bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 1046: extern volatile bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 1047: extern volatile bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 1048: extern volatile bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 1049: extern volatile bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 1050: extern volatile bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 1051: extern volatile bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 1052: extern volatile bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 1053: extern volatile bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 1054: extern volatile bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 1055: extern volatile bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 1056: extern volatile bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 1057: extern volatile bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 1058: extern volatile bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 1059: extern volatile bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 1060: extern volatile bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 1061: extern volatile bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 1062: extern volatile bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 1063: extern volatile bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 1064: extern volatile bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 1065: extern volatile bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 1066: extern volatile bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 1067: extern volatile bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 1068: extern volatile bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 1069: extern volatile bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 1070: extern volatile bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 1071: extern volatile bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 1072: extern volatile bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 1073: extern volatile bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 1074: extern volatile bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 1075: extern volatile bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 1076: extern volatile bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 1077: extern volatile bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 1078: extern volatile bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 1079: extern volatile bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 1080: extern volatile bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 1081: extern volatile bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 1082: extern volatile bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 1083: extern volatile bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1084: extern volatile bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 1085: extern volatile bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1086: extern volatile bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1087: extern volatile bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 1088: extern volatile bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 1089: extern volatile bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 1090: extern volatile bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 1091: extern volatile bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 1092: extern volatile bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 1093: extern volatile bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1094: extern volatile bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1095: extern volatile bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1096: extern volatile bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1097: extern volatile bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1098: extern volatile bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 1099: extern volatile bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 1100: extern volatile bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 1101: extern volatile bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 1102: extern volatile bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 1103: extern volatile bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 1104: extern volatile bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 1105: extern volatile bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 1106: extern volatile bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 1107: extern volatile bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 1108: extern volatile bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 1109: extern volatile bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 1110: extern volatile bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 1111: extern volatile bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 1112: extern volatile bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 1113: extern volatile bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 1114: extern volatile bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 1115: extern volatile bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 1116: extern volatile bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 1117: extern volatile bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 1118: extern volatile bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 1119: extern volatile bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 1120: extern volatile bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 1121: extern volatile bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 1122: extern volatile bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 1123: extern volatile bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 1124: extern volatile bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 1125: extern volatile bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 1126: extern volatile bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 1127: extern volatile bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 1128: extern volatile bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 1129: extern volatile bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 1130: extern volatile bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 1131: extern volatile bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 1132: extern volatile bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 1133: extern volatile bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 1134: extern volatile bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 1135: extern volatile bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 1136: extern volatile bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 1137: extern volatile bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 1138: extern volatile bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 1139: extern volatile bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 1140: extern volatile bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 1141: extern volatile bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 1142: extern volatile bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 1143: extern volatile bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 1144: extern volatile bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 1145: extern volatile bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1146: extern volatile bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1147: extern volatile bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 1148: extern volatile bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 1149: extern volatile bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 1150: extern volatile bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 1151: extern volatile bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 1152: extern volatile bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 1153: extern volatile bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 1154: extern volatile bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 1155: extern volatile bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 1156: extern volatile bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 1157: extern volatile bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 1158: extern volatile bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 1159: extern volatile bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 1160: extern volatile bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 1161: extern volatile bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 1162: extern volatile bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 1163: extern volatile bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1164: extern volatile bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 1165: extern volatile bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 1166: extern volatile bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 1167: extern volatile bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1168: extern volatile bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 1169: extern volatile bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1170: extern volatile bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1171: extern volatile bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 1172: extern volatile bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 1173: extern volatile bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 1174: extern volatile bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 1175: extern volatile bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 1176: extern volatile bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 1177: extern volatile bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 1178: extern volatile bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 1179: extern volatile bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 1180: extern volatile bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 1181: extern volatile bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 1182: extern volatile bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 1183: extern volatile bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 1184: extern volatile bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 1185: extern volatile bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 1186: extern volatile bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 1187: extern volatile bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 1188: extern volatile bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 1189: extern volatile bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 1190: extern volatile bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1191: extern volatile bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 1192: extern volatile bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1193: extern volatile bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 1194: extern volatile bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 1195: extern volatile bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 1196: extern volatile bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 1197: extern volatile bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 1198: extern volatile bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 1199: extern volatile bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 1200: extern volatile bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 1201: extern volatile bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 1202: extern volatile bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 1203: extern volatile bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 1204: extern volatile bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 1205: extern volatile bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 1206: extern volatile bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 1207: extern volatile bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 1208: extern volatile bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 1209: extern volatile bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 1210: extern volatile bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 1211: extern volatile bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 1212: extern volatile bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 1213: extern volatile bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 1214: extern volatile bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 1215: extern volatile bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 1216: extern volatile bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 1217: extern volatile bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 1218: extern volatile bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 1219: extern volatile bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 1220: extern volatile bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 1221: extern volatile bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 1222: extern volatile bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 1223: extern volatile bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 1224: extern volatile bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 1225: extern volatile bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 1226: extern volatile bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 1227: extern volatile bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 1228: extern volatile bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 1229: extern volatile bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 1230: extern volatile bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 1231: extern volatile bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 1232: extern volatile bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 1233: extern volatile bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 1234: extern volatile bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 1235: extern volatile bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 1236: extern volatile bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 1237: extern volatile bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 1238: extern volatile bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 1239: extern volatile bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 1240: extern volatile bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 1241: extern volatile bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 1242: extern volatile bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1243: extern volatile bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1244: extern volatile bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 1245: extern volatile bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 1246: extern volatile bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 1247: extern volatile bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 1248: extern volatile bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 1249: extern volatile bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 1250: extern volatile bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 1251: extern volatile bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 1252: extern volatile bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 1253: extern volatile bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 1254: extern volatile bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 1255: extern volatile bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1256: extern volatile bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1257: extern volatile bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 1258: extern volatile bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 1259: extern volatile bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1260: extern volatile bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 1261: extern volatile bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 1262: extern volatile bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 1263: extern volatile bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1264: extern volatile bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1265: extern volatile bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 1266: extern volatile bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1267: extern volatile bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1268: extern volatile bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void _nop(void);
[; ;pic.h: 82: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 156: extern void _delay(unsigned long);
[; ;i2c_ar1000.h: 31: extern void ar_i2c_initialize(void);
[; ;i2c_ar1000.h: 49: extern unsigned char b_i2c_check_error_flag(void);
[; ;i2c_ar1000.h: 67: extern unsigned int ar_i2c_read(unsigned char uc_slave_address, unsigned char uc_register);
[; ;i2c_ar1000.h: 85: extern void ar_i2c_write(unsigned char uc_slave_address, unsigned char uc_register, unsigned long uc_data);
"22 PR31_final.c
[; ;PR31_final.c: 22: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3F32");
[; <" 	psect config,class=CONFIG,delta=2 ;# ">
[; <" 	dw 0x3F32 ;# ">
"55
[v _m `uc ~T0 1 e ]
[i _m
-> -> 0 `i `uc
]
[v _vol `uc ~T0 1 e ]
[v _i `uc ~T0 1 e ]
[; ;PR31_final.c: 55: unsigned char m=0,vol,i;
"56
[v _prog_chan `uc ~T0 -> 7 `i e ]
[i _prog_chan
:U ..
-> -> 1080 `i `uc
-> -> 900 `i `uc
-> -> 946 `i `uc
-> -> 968 `i `uc
-> -> 1006 `i `uc
-> -> 1045 `i `uc
-> -> 1077 `i `uc
..
]
[; ;PR31_final.c: 56: unsigned char prog_chan[7]={1080,900,946,968,1006,1045,1077};
"57
[v _currentChannel `ul ~T0 1 e ]
[v _freq_kHz `ul ~T0 1 e ]
[; ;PR31_final.c: 57: unsigned long currentChannel,freq_kHz;
"58
[v _STC `ui ~T0 1 e ]
[i _STC
-> -> 0 `i `ui
]
[; ;PR31_final.c: 58: unsigned int STC = 0;
"59
[v _register_values `ui ~T0 -> 18 `i e ]
[i _register_values
:U ..
"61
-> 65535 `ui
"62
-> -> 23317 `i `ui
"63
-> 62649 `ui
"64
-> 32786 `ui
"65
-> -> 1024 `i `ui
"66
-> -> 10410 `i `ui
"67
-> -> 17408 `i `ui
"68
-> -> 7911 `i `ui
"69
-> -> 28993 `i `ui
"70
-> -> 125 `i `ui
"71
-> 33478 `ui
"72
-> -> 20309 `i `ui
"73
-> 38668 `ui
"74
-> 47173 `ui
"75
-> 64557 `ui
"76
-> 32919 `ui
"77
-> -> 1185 `i `ui
"79
-> 57194 `ui
..
]
[; ;PR31_final.c: 59: unsigned int register_values[18] =
[; ;PR31_final.c: 60: {
[; ;PR31_final.c: 61: 0xFFFF,
[; ;PR31_final.c: 62: 0x5B15,
[; ;PR31_final.c: 63: 0xF4B9,
[; ;PR31_final.c: 64: 0x8012,
[; ;PR31_final.c: 65: 0x0400,
[; ;PR31_final.c: 66: 0x28AA,
[; ;PR31_final.c: 67: 0x4400,
[; ;PR31_final.c: 68: 0x1EE7,
[; ;PR31_final.c: 69: 0x7141,
[; ;PR31_final.c: 70: 0x007D,
[; ;PR31_final.c: 71: 0x82C6,
[; ;PR31_final.c: 72: 0x4F55,
[; ;PR31_final.c: 73: 0x970C,
[; ;PR31_final.c: 74: 0xB845,
[; ;PR31_final.c: 75: 0xFC2D,
[; ;PR31_final.c: 76: 0x8097,
[; ;PR31_final.c: 77: 0x04A1,
[; ;PR31_final.c: 78: 0xDF6A
[; ;PR31_final.c: 79: };
"81
[v _v2 `uc ~T0 -> 10 `i e ]
[i _v2
:U ..
-> -> 0 `i `uc
-> -> 15 `i `uc
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
..
]
[; ;PR31_final.c: 81: unsigned char v2[10] = {0x0,0xF,0xD,0xE,0xF,0xE,0xF,0xF,0xF,0xF};
"83
[v _v1 `uc ~T0 -> 10 `i e ]
[i _v1
:U ..
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
..
]
[; ;PR31_final.c: 83: unsigned char v1[10] = {0x0,0x7,0x6,0x6,0x6,0x3,0x3,0x2,0x1,0x0};
[; ;PR31_final.c: 89: void delay(unsigned long RC4);
[; ;PR31_final.c: 90: void ar1000_init(void);
[; ;PR31_final.c: 91: void setAR1000 (unsigned int freq_kHz);
[; ;PR31_final.c: 92: void set_vol(unsigned char vol);
[; ;PR31_final.c: 93: void send_config(unsigned char RC4);
[; ;PR31_final.c: 94: void send_char(unsigned char RC4);
[; ;PR31_final.c: 95: void e_pulse(void);
[; ;PR31_final.c: 96: void lcd_goto(unsigned char RC4);
[; ;PR31_final.c: 97: void lcd_clr(void);
[; ;PR31_final.c: 98: void send_string(const char *s);
[; ;PR31_final.c: 99: void send_dec(unsigned long RC4);
[; ;PR31_final.c: 100: void adjust_vol (void);
[; ;PR31_final.c: 101: void adjust_channel(void);
[; ;PR31_final.c: 102: void decrease_chan(void);
[; ;PR31_final.c: 103: void increase_chan(void);
[; ;PR31_final.c: 104: void uart_init (void);
[; ;PR31_final.c: 105: void uart_tx (unsigned char uc_data);
[; ;PR31_final.c: 106: unsigned char uart_rc (void);
[; ;PR31_final.c: 107: void uart_sendstr(const char* s);
[; ;PR31_final.c: 108: void eprom_write (unsigned char channel,unsigned int fm_value);
[; ;PR31_final.c: 109: unsigned int eprom_read (unsigned char channel);
[; ;PR31_final.c: 110: void switch_channel (void);
"116
[v _main `(i ~T0 1 ef ]
{
[; ;PR31_final.c: 116: int main (void){
[e :U _main ]
[f ]
[; ;PR31_final.c: 118: delay(5000);
"118
[e ( _delay (1 -> -> -> 5000 `i `l `ul ]
[; ;PR31_final.c: 120: TRISA = 0b11111111;
"120
[e = _TRISA -> -> 255 `i `uc ]
[; ;PR31_final.c: 121: TRISB = 0b00001111;
"121
[e = _TRISB -> -> 15 `i `uc ]
[; ;PR31_final.c: 122: TRISD = 0b00000000;
"122
[e = _TRISD -> -> 0 `i `uc ]
[; ;PR31_final.c: 123: PORTA = 0;
"123
[e = _PORTA -> -> 0 `i `uc ]
[; ;PR31_final.c: 124: PORTB = 0;
"124
[e = _PORTB -> -> 0 `i `uc ]
[; ;PR31_final.c: 125: PORTD = 0;
"125
[e = _PORTD -> -> 0 `i `uc ]
[; ;PR31_final.c: 129: send_config(0b00000001);
"129
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR31_final.c: 130: send_config(0b00000010);
"130
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR31_final.c: 131: send_config(0b00000110);
"131
[e ( _send_config (1 -> -> 6 `i `uc ]
[; ;PR31_final.c: 132: send_config(0b00001100);
"132
[e ( _send_config (1 -> -> 12 `i `uc ]
[; ;PR31_final.c: 133: send_config(0b00111000);
"133
[e ( _send_config (1 -> -> 56 `i `uc ]
[; ;PR31_final.c: 136: uart_init();
"136
[e ( _uart_init ..  ]
[; ;PR31_final.c: 137: ar_i2c_initialize();
"137
[e ( _ar_i2c_initialize ..  ]
[; ;PR31_final.c: 138: ar1000_init();
"138
[e ( _ar1000_init ..  ]
[; ;PR31_final.c: 140: send_string("PR31 :");
"140
[e ( _send_string (1 :s 1C ]
[; ;PR31_final.c: 141: lcd_goto(20);
"141
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR31_final.c: 142: send_string("Digital Radio");
"142
[e ( _send_string (1 :s 2C ]
[; ;PR31_final.c: 143: uart_sendstr("PR31 = Digital Radio");
"143
[e ( _uart_sendstr (1 :s 3C ]
[; ;PR31_final.c: 144: set_vol(8);
"144
[e ( _set_vol (1 -> -> 8 `i `uc ]
[; ;PR31_final.c: 145: delay(150000);
"145
[e ( _delay (1 -> -> 150000 `l `ul ]
[; ;PR31_final.c: 147: lcd_clr();
"147
[e ( _lcd_clr ..  ]
[; ;PR31_final.c: 148: send_string("sw1=chan sw2=vol");
"148
[e ( _send_string (1 :s 4C ]
[; ;PR31_final.c: 149: uart_sendstr("sw1=chan sw2=vol");
"149
[e ( _uart_sendstr (1 :s 5C ]
[; ;PR31_final.c: 150: lcd_goto(20);
"150
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR31_final.c: 151: send_string("sw1(1s)=set");
"151
[e ( _send_string (1 :s 6C ]
[; ;PR31_final.c: 152: uart_sendstr("sw1(1s)=set");
"152
[e ( _uart_sendstr (1 :s 7C ]
[; ;PR31_final.c: 155: for (i=1;i<7;i++)
"155
{
[e = _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 164  ]
[e $U 165  ]
"156
[e :U 164 ]
[; ;PR31_final.c: 156: {
{
[; ;PR31_final.c: 157: freq_kHz = eeprom_read(i);
"157
[e = _freq_kHz -> ( _eeprom_read (1 _i `ul ]
[; ;PR31_final.c: 158: if (freq_kHz==255)
"158
[e $ ! == _freq_kHz -> -> -> 255 `i `l `ul 167  ]
[; ;PR31_final.c: 159: eprom_write (i,prog_chan[i]);
"159
[e ( _eprom_write (2 , _i -> *U + &U _prog_chan * -> _i `ux -> -> # *U &U _prog_chan `ui `ux `ui ]
[e :U 167 ]
"160
}
"155
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 164  ]
[e :U 165 ]
"160
}
[; ;PR31_final.c: 160: }
[; ;PR31_final.c: 162: while(1)
"162
[e :U 169 ]
[; ;PR31_final.c: 163: {
"163
{
[; ;PR31_final.c: 165: if(RB0==0)
"165
[e $ ! == -> _RB0 `i -> 0 `i 171  ]
[; ;PR31_final.c: 166: {
"166
{
[; ;PR31_final.c: 167: while (RB0==0);
"167
[e $U 172  ]
[e :U 173 ]
[e :U 172 ]
[e $ == -> _RB0 `i -> 0 `i 173  ]
[e :U 174 ]
[; ;PR31_final.c: 168: switch_channel();
"168
[e ( _switch_channel ..  ]
[; ;PR31_final.c: 169: adjust_channel();
"169
[e ( _adjust_channel ..  ]
"170
}
[e :U 171 ]
[; ;PR31_final.c: 170: }
[; ;PR31_final.c: 172: if (RB1 == 0)
"172
[e $ ! == -> _RB1 `i -> 0 `i 175  ]
[; ;PR31_final.c: 173: {
"173
{
[; ;PR31_final.c: 174: while (RB1 == 0);
"174
[e $U 176  ]
[e :U 177 ]
[e :U 176 ]
[e $ == -> _RB1 `i -> 0 `i 177  ]
[e :U 178 ]
[; ;PR31_final.c: 175: lcd_goto(0);
"175
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR31_final.c: 176: send_string("volume level=   ");
"176
[e ( _send_string (1 :s 8C ]
[; ;PR31_final.c: 177: uart_sendstr("volume level=   ");
"177
[e ( _uart_sendstr (1 :s 9C ]
[; ;PR31_final.c: 178: m -= 1;
"178
[e =- _m -> -> 1 `i `uc ]
[; ;PR31_final.c: 179: adjust_vol ();
"179
[e ( _adjust_vol ..  ]
"180
}
[e :U 175 ]
"182
}
[e :U 168 ]
"162
[e $U 169  ]
[e :U 170 ]
[; ;PR31_final.c: 180: }
[; ;PR31_final.c: 182: }
[; ;PR31_final.c: 183: }
"183
[e :UE 163 ]
}
"192
[v _switch_channel `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 191: void switch_channel (void)
[; ;PR31_final.c: 192: {
[e :U _switch_channel ]
[f ]
[; ;PR31_final.c: 193: m++;
"193
[e ++ _m -> -> 1 `i `uc ]
[; ;PR31_final.c: 194: if ( m > 6) m = 1;
"194
[e $ ! > -> _m `i -> 6 `i 180  ]
[e = _m -> -> 1 `i `uc ]
[e :U 180 ]
[; ;PR31_final.c: 196: lcd_clr();
"196
[e ( _lcd_clr ..  ]
[; ;PR31_final.c: 197: send_string("channel ");
"197
[e ( _send_string (1 :s 10C ]
[; ;PR31_final.c: 198: uart_tx(0x0C);
"198
[e ( _uart_tx (1 -> -> 12 `i `uc ]
[; ;PR31_final.c: 199: uart_sendstr("Channel ");
"199
[e ( _uart_sendstr (1 :s 11C ]
[; ;PR31_final.c: 200: send_char(0x30+m);
"200
[e ( _send_char (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 201: uart_tx(0x30+m);
"201
[e ( _uart_tx (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 202: currentChannel = eprom_read(m);
"202
[e = _currentChannel -> ( _eprom_read (1 _m `ul ]
[; ;PR31_final.c: 203: setAR1000(currentChannel);
"203
[e ( _setAR1000 (1 -> _currentChannel `ui ]
[; ;PR31_final.c: 204: send_dec(currentChannel);
"204
[e ( _send_dec (1 _currentChannel ]
[; ;PR31_final.c: 205: }
"205
[e :UE 179 ]
}
"209
[v _adjust_channel `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 208: void adjust_channel(void)
[; ;PR31_final.c: 209: {
[e :U _adjust_channel ]
[f ]
[; ;PR31_final.c: 210: while(1)
"210
[e :U 183 ]
[; ;PR31_final.c: 211: {
"211
{
[; ;PR31_final.c: 212: if (RB3 == 0)
"212
[e $ ! == -> _RB3 `i -> 0 `i 185  ]
[; ;PR31_final.c: 213: {
"213
{
"214
[v _press `ui ~T0 1 a ]
[; ;PR31_final.c: 214: unsigned int press=0;
[e = _press -> -> 0 `i `ui ]
[; ;PR31_final.c: 215: while (RB3==0)
"215
[e $U 186  ]
[e :U 187 ]
[; ;PR31_final.c: 216: {
"216
{
[; ;PR31_final.c: 217: press += 1;
"217
[e =+ _press -> -> 1 `i `ui ]
[; ;PR31_final.c: 218: if (press >= 650)
"218
[e $ ! >= _press -> -> 650 `i `ui 189  ]
[; ;PR31_final.c: 219: decrease_chan();
"219
[e ( _decrease_chan ..  ]
[e :U 189 ]
[; ;PR31_final.c: 220: delay(100);
"220
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"221
}
[e :U 186 ]
"215
[e $ == -> _RB3 `i -> 0 `i 187  ]
[e :U 188 ]
[; ;PR31_final.c: 221: }
[; ;PR31_final.c: 222: decrease_chan();
"222
[e ( _decrease_chan ..  ]
[; ;PR31_final.c: 223: delay(1000);
"223
[e ( _delay (1 -> -> -> 1000 `i `l `ul ]
"224
}
[e :U 185 ]
[; ;PR31_final.c: 224: }
[; ;PR31_final.c: 226: if (RB2 == 0)
"226
[e $ ! == -> _RB2 `i -> 0 `i 190  ]
[; ;PR31_final.c: 227: {
"227
{
"228
[v _press `ui ~T0 1 a ]
[; ;PR31_final.c: 228: unsigned int press=0;
[e = _press -> -> 0 `i `ui ]
[; ;PR31_final.c: 229: while (RB2==0)
"229
[e $U 191  ]
[e :U 192 ]
[; ;PR31_final.c: 230: {
"230
{
[; ;PR31_final.c: 231: press += 1;
"231
[e =+ _press -> -> 1 `i `ui ]
[; ;PR31_final.c: 232: if (press >= 650)
"232
[e $ ! >= _press -> -> 650 `i `ui 194  ]
[; ;PR31_final.c: 233: increase_chan();
"233
[e ( _increase_chan ..  ]
[e :U 194 ]
[; ;PR31_final.c: 234: delay(100);
"234
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"235
}
[e :U 191 ]
"229
[e $ == -> _RB2 `i -> 0 `i 192  ]
[e :U 193 ]
[; ;PR31_final.c: 235: }
[; ;PR31_final.c: 236: increase_chan();
"236
[e ( _increase_chan ..  ]
[; ;PR31_final.c: 237: delay(1000);
"237
[e ( _delay (1 -> -> -> 1000 `i `l `ul ]
"238
}
[e :U 190 ]
[; ;PR31_final.c: 238: }
[; ;PR31_final.c: 240: if (RB0 == 0)
"240
[e $ ! == -> _RB0 `i -> 0 `i 195  ]
[; ;PR31_final.c: 241: { unsigned int press=0;
"241
{
[v _press `ui ~T0 1 a ]
[e = _press -> -> 0 `i `ui ]
[; ;PR31_final.c: 242: while (RB0==0)
"242
[e $U 196  ]
[e :U 197 ]
[; ;PR31_final.c: 243: {
"243
{
[; ;PR31_final.c: 244: press += 1;
"244
[e =+ _press -> -> 1 `i `ui ]
[; ;PR31_final.c: 245: if (press >= 1300)
"245
[e $ ! >= _press -> -> 1300 `i `ui 199  ]
[; ;PR31_final.c: 246: {
"246
{
[; ;PR31_final.c: 247: eprom_write(m,currentChannel);
"247
[e ( _eprom_write (2 , _m -> _currentChannel `ui ]
[; ;PR31_final.c: 248: lcd_clr();
"248
[e ( _lcd_clr ..  ]
[; ;PR31_final.c: 249: send_string("channel ");
"249
[e ( _send_string (1 :s 12C ]
[; ;PR31_final.c: 250: uart_sendstr("channel ");
"250
[e ( _uart_sendstr (1 :s 13C ]
[; ;PR31_final.c: 251: send_char(0x30+m);
"251
[e ( _send_char (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 252: uart_tx(0x30+m);
"252
[e ( _uart_tx (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 253: send_string(" setted");
"253
[e ( _send_string (1 :s 14C ]
[; ;PR31_final.c: 254: uart_sendstr(" setted");
"254
[e ( _uart_sendstr (1 :s 15C ]
[; ;PR31_final.c: 255: send_dec(currentChannel);
"255
[e ( _send_dec (1 _currentChannel ]
[; ;PR31_final.c: 256: while (RB0==0);
"256
[e $U 200  ]
[e :U 201 ]
[e :U 200 ]
[e $ == -> _RB0 `i -> 0 `i 201  ]
[e :U 202 ]
[; ;PR31_final.c: 257: m -= 1;
"257
[e =- _m -> -> 1 `i `uc ]
[; ;PR31_final.c: 258: delay(2000);
"258
[e ( _delay (1 -> -> -> 2000 `i `l `ul ]
"259
}
[e :U 199 ]
[; ;PR31_final.c: 259: }
[; ;PR31_final.c: 260: delay(100);
"260
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"262
}
[e :U 196 ]
"242
[e $ == -> _RB0 `i -> 0 `i 197  ]
[e :U 198 ]
[; ;PR31_final.c: 262: }
[; ;PR31_final.c: 263: switch_channel();
"263
[e ( _switch_channel ..  ]
"264
}
[e :U 195 ]
[; ;PR31_final.c: 264: }
[; ;PR31_final.c: 266: if (RB1 == 0)
"266
[e $ ! == -> _RB1 `i -> 0 `i 203  ]
[; ;PR31_final.c: 267: {
"267
{
[; ;PR31_final.c: 268: while (RB1 == 0);
"268
[e $U 204  ]
[e :U 205 ]
[e :U 204 ]
[e $ == -> _RB1 `i -> 0 `i 205  ]
[e :U 206 ]
[; ;PR31_final.c: 269: lcd_goto(0);
"269
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR31_final.c: 270: send_string("volume level=   ");
"270
[e ( _send_string (1 :s 16C ]
[; ;PR31_final.c: 271: uart_sendstr("volume level=   ");
"271
[e ( _uart_sendstr (1 :s 17C ]
[; ;PR31_final.c: 272: m -= 1;
"272
[e =- _m -> -> 1 `i `uc ]
[; ;PR31_final.c: 273: adjust_vol ();
"273
[e ( _adjust_vol ..  ]
"274
}
[e :U 203 ]
"275
}
[e :U 182 ]
"210
[e $U 183  ]
[e :U 184 ]
[; ;PR31_final.c: 274: }
[; ;PR31_final.c: 275: }
[; ;PR31_final.c: 276: }
"276
[e :UE 181 ]
}
"279
[v _decrease_chan `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 278: void decrease_chan(void)
[; ;PR31_final.c: 279: {
[e :U _decrease_chan ]
[f ]
[; ;PR31_final.c: 280: currentChannel -=1;
"280
[e =- _currentChannel -> -> -> 1 `i `l `ul ]
[; ;PR31_final.c: 281: if ( currentChannel <= 875 )
"281
[e $ ! <= _currentChannel -> -> -> 875 `i `l `ul 208  ]
[; ;PR31_final.c: 282: currentChannel = 1080;
"282
[e = _currentChannel -> -> -> 1080 `i `l `ul ]
[e :U 208 ]
[; ;PR31_final.c: 283: setAR1000 (currentChannel);
"283
[e ( _setAR1000 (1 -> _currentChannel `ui ]
[; ;PR31_final.c: 284: uart_tx(0x0C);
"284
[e ( _uart_tx (1 -> -> 12 `i `uc ]
[; ;PR31_final.c: 285: uart_sendstr("channel ");
"285
[e ( _uart_sendstr (1 :s 18C ]
[; ;PR31_final.c: 286: uart_tx(0x30+m);
"286
[e ( _uart_tx (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 287: send_dec(currentChannel);
"287
[e ( _send_dec (1 _currentChannel ]
[; ;PR31_final.c: 288: delay(1500);
"288
[e ( _delay (1 -> -> -> 1500 `i `l `ul ]
[; ;PR31_final.c: 289: }
"289
[e :UE 207 ]
}
"292
[v _increase_chan `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 291: void increase_chan(void)
[; ;PR31_final.c: 292: {
[e :U _increase_chan ]
[f ]
[; ;PR31_final.c: 293: currentChannel +=1;
"293
[e =+ _currentChannel -> -> -> 1 `i `l `ul ]
[; ;PR31_final.c: 294: if ( currentChannel >= 1080 )
"294
[e $ ! >= _currentChannel -> -> -> 1080 `i `l `ul 210  ]
[; ;PR31_final.c: 295: currentChannel = 875;
"295
[e = _currentChannel -> -> -> 875 `i `l `ul ]
[e :U 210 ]
[; ;PR31_final.c: 296: setAR1000 (currentChannel);
"296
[e ( _setAR1000 (1 -> _currentChannel `ui ]
[; ;PR31_final.c: 297: uart_tx(0x0C);
"297
[e ( _uart_tx (1 -> -> 12 `i `uc ]
[; ;PR31_final.c: 298: uart_sendstr("channel ");
"298
[e ( _uart_sendstr (1 :s 19C ]
[; ;PR31_final.c: 299: uart_tx(0x30+m);
"299
[e ( _uart_tx (1 -> + -> 48 `i -> _m `i `uc ]
[; ;PR31_final.c: 300: send_dec(currentChannel);
"300
[e ( _send_dec (1 _currentChannel ]
[; ;PR31_final.c: 301: delay(1500);
"301
[e ( _delay (1 -> -> -> 1500 `i `l `ul ]
[; ;PR31_final.c: 302: }
"302
[e :UE 209 ]
}
"305
[v _send_dec `(v ~T0 1 ef1`ul ]
{
[; ;PR31_final.c: 304: void send_dec(unsigned long RC4)
[; ;PR31_final.c: 305: { unsigned long no[5];
[e :U _send_dec ]
[v _RC4 `ul ~T0 1 r1 ]
[f ]
[v _no `ul ~T0 -> 5 `i a ]
"306
[v _press `ui ~T0 1 a ]
"307
[v _i `us ~T0 1 a ]
[; ;PR31_final.c: 306: unsigned int press;
[; ;PR31_final.c: 307: unsigned short i;
[; ;PR31_final.c: 308: no[0]=(RC4/1000+0x30);
"308
[e = *U + &U _no * -> -> -> 0 `i `ui `ux -> -> # *U &U _no `ui `ux + / _RC4 -> -> -> 1000 `i `l `ul -> -> -> 48 `i `l `ul ]
[; ;PR31_final.c: 309: RC4=RC4%1000;
"309
[e = _RC4 % _RC4 -> -> -> 1000 `i `l `ul ]
[; ;PR31_final.c: 310: no[1]=(RC4/100+0x30);
"310
[e = *U + &U _no * -> -> -> 1 `i `ui `ux -> -> # *U &U _no `ui `ux + / _RC4 -> -> -> 100 `i `l `ul -> -> -> 48 `i `l `ul ]
[; ;PR31_final.c: 311: RC4=RC4%100;
"311
[e = _RC4 % _RC4 -> -> -> 100 `i `l `ul ]
[; ;PR31_final.c: 312: no[2]=(RC4/10+0x30);
"312
[e = *U + &U _no * -> -> -> 2 `i `ui `ux -> -> # *U &U _no `ui `ux + / _RC4 -> -> -> 10 `i `l `ul -> -> -> 48 `i `l `ul ]
[; ;PR31_final.c: 313: no[3]=0x2E;
"313
[e = *U + &U _no * -> -> -> 3 `i `ui `ux -> -> # *U &U _no `ui `ux -> -> -> 46 `i `l `ul ]
[; ;PR31_final.c: 314: no[4]=(RC4%10+0x30);
"314
[e = *U + &U _no * -> -> -> 4 `i `ui `ux -> -> # *U &U _no `ui `ux + % _RC4 -> -> -> 10 `i `l `ul -> -> -> 48 `i `l `ul ]
[; ;PR31_final.c: 315: lcd_goto(20);
"315
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR31_final.c: 316: send_string("FM=");
"316
[e ( _send_string (1 :s 20C ]
[; ;PR31_final.c: 317: uart_sendstr("FM=");
"317
[e ( _uart_sendstr (1 :s 21C ]
[; ;PR31_final.c: 318: for (i=0;i<5;i++)
"318
{
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 5 `i `ui 212  ]
[e $U 213  ]
"319
[e :U 212 ]
[; ;PR31_final.c: 319: {
{
[; ;PR31_final.c: 320: send_char(no[i]);
"320
[e ( _send_char (1 -> *U + &U _no * -> _i `ux -> -> # *U &U _no `ui `ux `uc ]
[; ;PR31_final.c: 321: uart_tx(no[i]);
"321
[e ( _uart_tx (1 -> *U + &U _no * -> _i `ux -> -> # *U &U _no `ui `ux `uc ]
"322
}
"318
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 5 `i `ui 212  ]
[e :U 213 ]
"322
}
[; ;PR31_final.c: 322: }
[; ;PR31_final.c: 323: delay(1000);
"323
[e ( _delay (1 -> -> -> 1000 `i `l `ul ]
[; ;PR31_final.c: 324: }
"324
[e :UE 211 ]
}
"327
[v _set_vol `(v ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 326: void set_vol(unsigned char key)
[; ;PR31_final.c: 327: {
[e :U _set_vol ]
[v _key `uc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 328: vol = key;
"328
[e = _vol _key ]
[; ;PR31_final.c: 330: register_values[1] |= (1<<1);
"330
[e =| *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> << -> 1 `i -> 1 `i `ui ]
[; ;PR31_final.c: 331: ar_i2c_write(0x20, 1, register_values[1]);
"331
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 1 `i `uc -> *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 333: register_values[3] = (register_values[3] & ~0x0780) | (v1[key] << 7);
"333
[e = *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux | & *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> ~ -> 1920 `i `ui -> << -> *U + &U _v1 * -> _key `ux -> -> # *U &U _v1 `ui `ux `i -> 7 `i `ui ]
[; ;PR31_final.c: 334: ar_i2c_write(0x20, 3, register_values[3]);
"334
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 3 `i `uc -> *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 336: register_values[14] = (register_values[14] & ~0xF000)| (v2[key]<< 12);
"336
[e = *U + &U _register_values * -> -> -> 14 `i `ui `ux -> -> # *U &U _register_values `ui `ux | & *U + &U _register_values * -> -> -> 14 `i `ui `ux -> -> # *U &U _register_values `ui `ux ~ -> 61440 `ui -> << -> *U + &U _v2 * -> _key `ux -> -> # *U &U _v2 `ui `ux `i -> 12 `i `ui ]
[; ;PR31_final.c: 337: ar_i2c_write(0x20, 14, register_values[14]);
"337
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 14 `i `uc -> *U + &U _register_values * -> -> -> 14 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 339: register_values[1] &= ~(1<<1);
"339
[e =& *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> ~ << -> 1 `i -> 1 `i `ui ]
[; ;PR31_final.c: 340: ar_i2c_write(0x20, 1,register_values[1]);
"340
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 1 `i `uc -> *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 341: }
"341
[e :UE 215 ]
}
"344
[v _adjust_vol `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 343: void adjust_vol (void)
[; ;PR31_final.c: 344: { unsigned char vol_default,check;
[e :U _adjust_vol ]
[f ]
[v _vol_default `uc ~T0 1 a ]
[v _check `uc ~T0 1 a ]
[; ;PR31_final.c: 346: while (1){
"346
[e :U 218 ]
{
[; ;PR31_final.c: 347: check = 0;
"347
[e = _check -> -> 0 `i `uc ]
[; ;PR31_final.c: 348: lcd_goto(13);
"348
[e ( _lcd_goto (1 -> -> 13 `i `uc ]
[; ;PR31_final.c: 349: vol_default = vol;
"349
[e = _vol_default _vol ]
[; ;PR31_final.c: 350: send_char(0x30+vol);
"350
[e ( _send_char (1 -> + -> 48 `i -> _vol `i `uc ]
[; ;PR31_final.c: 351: uart_tx(0x30+vol);
"351
[e ( _uart_tx (1 -> + -> 48 `i -> _vol `i `uc ]
[; ;PR31_final.c: 352: delay(10);
"352
[e ( _delay (1 -> -> -> 10 `i `l `ul ]
[; ;PR31_final.c: 355: while(check==0)
"355
[e $U 220  ]
[e :U 221 ]
[; ;PR31_final.c: 356: {
"356
{
[; ;PR31_final.c: 357: if (RB3 == 0)
"357
[e $ ! == -> _RB3 `i -> 0 `i 223  ]
[; ;PR31_final.c: 358: {
"358
{
[; ;PR31_final.c: 359: while (RB3==0);
"359
[e $U 224  ]
[e :U 225 ]
[e :U 224 ]
[e $ == -> _RB3 `i -> 0 `i 225  ]
[e :U 226 ]
[; ;PR31_final.c: 360: vol -=1;
"360
[e =- _vol -> -> 1 `i `uc ]
[; ;PR31_final.c: 361: if ( vol <= 1 )
"361
[e $ ! <= -> _vol `i -> 1 `i 227  ]
[; ;PR31_final.c: 362: vol = 1;
"362
[e = _vol -> -> 1 `i `uc ]
[e :U 227 ]
[; ;PR31_final.c: 363: set_vol (vol);
"363
[e ( _set_vol (1 _vol ]
[; ;PR31_final.c: 364: delay(100);
"364
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"365
}
[e :U 223 ]
[; ;PR31_final.c: 365: }
[; ;PR31_final.c: 367: if (RB2 == 0)
"367
[e $ ! == -> _RB2 `i -> 0 `i 228  ]
[; ;PR31_final.c: 368: {
"368
{
[; ;PR31_final.c: 369: while (RB2==0);
"369
[e $U 229  ]
[e :U 230 ]
[e :U 229 ]
[e $ == -> _RB2 `i -> 0 `i 230  ]
[e :U 231 ]
[; ;PR31_final.c: 370: vol +=1;
"370
[e =+ _vol -> -> 1 `i `uc ]
[; ;PR31_final.c: 371: if (vol >= 9)
"371
[e $ ! >= -> _vol `i -> 9 `i 232  ]
[; ;PR31_final.c: 372: vol = 9;
"372
[e = _vol -> -> 9 `i `uc ]
[e :U 232 ]
[; ;PR31_final.c: 373: set_vol (vol);
"373
[e ( _set_vol (1 _vol ]
[; ;PR31_final.c: 374: delay(100);
"374
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
"375
}
[e :U 228 ]
[; ;PR31_final.c: 375: }
[; ;PR31_final.c: 377: if (RB0==0)
"377
[e $ ! == -> _RB0 `i -> 0 `i 233  ]
[; ;PR31_final.c: 378: {
"378
{
[; ;PR31_final.c: 379: return;
"379
[e $UE 216  ]
"380
}
[e :U 233 ]
[; ;PR31_final.c: 380: }
[; ;PR31_final.c: 382: check = vol & ~(vol_default);
"382
[e = _check -> & -> _vol `i ~ -> _vol_default `i `uc ]
[; ;PR31_final.c: 383: check |= ~vol & vol_default;
"383
[e =| _check -> & ~ -> _vol `i -> _vol_default `i `uc ]
"385
}
[e :U 220 ]
"355
[e $ == -> _check `i -> 0 `i 221  ]
[e :U 222 ]
[; ;PR31_final.c: 385: }
[; ;PR31_final.c: 386: uart_tx(0x08);
"386
[e ( _uart_tx (1 -> -> 8 `i `uc ]
"387
}
[e :U 217 ]
"346
[e $U 218  ]
[e :U 219 ]
[; ;PR31_final.c: 387: }
[; ;PR31_final.c: 388: }
"388
[e :UE 216 ]
}
"394
[v _ar1000_init `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 393: void ar1000_init(void)
[; ;PR31_final.c: 394: {
[e :U _ar1000_init ]
[f ]
[; ;PR31_final.c: 395: delay(100);
"395
[e ( _delay (1 -> -> -> 100 `i `l `ul ]
[; ;PR31_final.c: 396: ar_i2c_write(0x20, 0, register_values[0] & 0xFFFE);
"396
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 0 `i `uc -> & *U + &U _register_values * -> -> -> 0 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> 65534 `ui `ul ]
[; ;PR31_final.c: 398: for(int i = 1 ; i < 18 ; i++)
"398
{
[v _i `i ~T0 1 a ]
[e = _i -> 1 `i ]
[e $ < _i -> 18 `i 235  ]
[e $U 236  ]
"399
[e :U 235 ]
[; ;PR31_final.c: 399: {
{
[; ;PR31_final.c: 400: ar_i2c_write(0x20, i, register_values[i]);
"400
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> _i `uc -> *U + &U _register_values * -> -> _i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
"401
}
"398
[e ++ _i -> 1 `i ]
[e $ < _i -> 18 `i 235  ]
[e :U 236 ]
"401
}
[; ;PR31_final.c: 401: }
[; ;PR31_final.c: 403: ar_i2c_write(0x20, 0, register_values[0]);
"403
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 0 `i `uc -> *U + &U _register_values * -> -> -> 0 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 405: while(STC == 0)
"405
[e $U 238  ]
[e :U 239 ]
[; ;PR31_final.c: 406: {
"406
{
[; ;PR31_final.c: 407: STC = ar_i2c_read(0x20, 0x13);
"407
[e = _STC ( _ar_i2c_read (2 , -> -> 32 `i `uc -> -> 19 `i `uc ]
[; ;PR31_final.c: 408: STC &= (1<<5);
"408
[e =& _STC -> << -> 1 `i -> 5 `i `ui ]
[; ;PR31_final.c: 409: delay(10);
"409
[e ( _delay (1 -> -> -> 10 `i `l `ul ]
"411
}
[e :U 238 ]
"405
[e $ == _STC -> -> 0 `i `ui 239  ]
[e :U 240 ]
[; ;PR31_final.c: 411: }
[; ;PR31_final.c: 413: }
"413
[e :UE 234 ]
}
"416
[v _setAR1000 `(v ~T0 1 ef1`ui ]
{
[; ;PR31_final.c: 415: void setAR1000 (unsigned int freq_kHz)
[; ;PR31_final.c: 416: {
[e :U _setAR1000 ]
[v _freq_kHz `ui ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 417: freq_kHz -= 690;
"417
[e =- _freq_kHz -> -> 690 `i `ui ]
[; ;PR31_final.c: 419: register_values[1] |= (1<<1);
"419
[e =| *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> << -> 1 `i -> 1 `i `ui ]
[; ;PR31_final.c: 420: ar_i2c_write(0x20, 1, register_values[1]);
"420
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 1 `i `uc -> *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 423: register_values[2] &= ~(0x01FF | 0x0200);
"423
[e =& *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> ~ | -> 511 `i -> 512 `i `ui ]
[; ;PR31_final.c: 424: ar_i2c_write(0x20, 2, register_values[2]);
"424
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 2 `i `uc -> *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 427: register_values[3] &= ~(1<<14);
"427
[e =& *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> ~ << -> 1 `i -> 14 `i `ui ]
[; ;PR31_final.c: 428: ar_i2c_write(0x20, 3,register_values[3]);
"428
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 3 `i `uc -> *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 431: register_values[3] |= (1<<13);
"431
[e =| *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> << -> 1 `i -> 13 `i `ui ]
[; ;PR31_final.c: 432: ar_i2c_write(0x20, 3,register_values[3]);
"432
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 3 `i `uc -> *U + &U _register_values * -> -> -> 3 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 435: register_values[2] |= freq_kHz;
"435
[e =| *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux _freq_kHz ]
[; ;PR31_final.c: 436: ar_i2c_write(0x20, 2,register_values[2]);
"436
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 2 `i `uc -> *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 439: register_values[2] |= (1<<9);
"439
[e =| *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> << -> 1 `i -> 9 `i `ui ]
[; ;PR31_final.c: 440: ar_i2c_write(0x20, 2,register_values[2]);
"440
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 2 `i `uc -> *U + &U _register_values * -> -> -> 2 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 442: while(STC == 0)
"442
[e $U 242  ]
[e :U 243 ]
[; ;PR31_final.c: 443: {
"443
{
[; ;PR31_final.c: 444: STC = ar_i2c_read(0x20, 0x13);
"444
[e = _STC ( _ar_i2c_read (2 , -> -> 32 `i `uc -> -> 19 `i `uc ]
[; ;PR31_final.c: 445: STC &= (1<<5);
"445
[e =& _STC -> << -> 1 `i -> 5 `i `ui ]
[; ;PR31_final.c: 446: delay(10);
"446
[e ( _delay (1 -> -> -> 10 `i `l `ul ]
"447
}
[e :U 242 ]
"442
[e $ == _STC -> -> 0 `i `ui 243  ]
[e :U 244 ]
[; ;PR31_final.c: 447: }
[; ;PR31_final.c: 451: register_values[1] &= ~(1<<1);
"451
[e =& *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux -> ~ << -> 1 `i -> 1 `i `ui ]
[; ;PR31_final.c: 452: ar_i2c_write(0x20, 1,register_values[1]);
"452
[e ( _ar_i2c_write (3 , , -> -> 32 `i `uc -> -> 1 `i `uc -> *U + &U _register_values * -> -> -> 1 `i `ui `ux -> -> # *U &U _register_values `ui `ux `ul ]
[; ;PR31_final.c: 454: currentChannel = (ar_i2c_read(0x20, 0x13)&0xFF80)>>7;
"454
[e = _currentChannel -> >> & ( _ar_i2c_read (2 , -> -> 32 `i `uc -> -> 19 `i `uc -> 65408 `ui -> 7 `i `ul ]
[; ;PR31_final.c: 455: currentChannel += 690;
"455
[e =+ _currentChannel -> -> -> 690 `i `l `ul ]
[; ;PR31_final.c: 456: }
"456
[e :UE 241 ]
}
"462
[v _delay `(v ~T0 1 ef1`ul ]
{
[; ;PR31_final.c: 461: void delay(unsigned long RC4)
[; ;PR31_final.c: 462: {
[e :U _delay ]
[v _RC4 `ul ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 463: for( ;RC4>0;RC4-=1);
"463
{
[e $ > _RC4 -> -> -> 0 `i `l `ul 246  ]
[e $U 247  ]
[e :U 246 ]
[e =- _RC4 -> -> -> 1 `i `l `ul ]
[e $ > _RC4 -> -> -> 0 `i `l `ul 246  ]
[e :U 247 ]
}
[; ;PR31_final.c: 464: }
"464
[e :UE 245 ]
}
"467
[v _send_config `(v ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 466: void send_config(unsigned char RC4)
[; ;PR31_final.c: 467: {
[e :U _send_config ]
[v _RC4 `uc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 468: RB4=0;
"468
[e = _RB4 -> -> 0 `i `b ]
[; ;PR31_final.c: 469: PORTD=RC4;
"469
[e = _PORTD _RC4 ]
[; ;PR31_final.c: 470: delay(300);
"470
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR31_final.c: 471: e_pulse();
"471
[e ( _e_pulse ..  ]
[; ;PR31_final.c: 472: }
"472
[e :UE 249 ]
}
"474
[v _send_char `(v ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 473: void send_char(unsigned char RC4)
[; ;PR31_final.c: 474: {
[e :U _send_char ]
[v _RC4 `uc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 475: RB4=1;
"475
[e = _RB4 -> -> 1 `i `b ]
[; ;PR31_final.c: 476: PORTD=RC4;
"476
[e = _PORTD _RC4 ]
[; ;PR31_final.c: 477: delay(300);
"477
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR31_final.c: 478: e_pulse();
"478
[e ( _e_pulse ..  ]
[; ;PR31_final.c: 479: }
"479
[e :UE 250 ]
}
"481
[v _e_pulse `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 480: void e_pulse(void)
[; ;PR31_final.c: 481: {
[e :U _e_pulse ]
[f ]
[; ;PR31_final.c: 482: RB5=1;
"482
[e = _RB5 -> -> 1 `i `b ]
[; ;PR31_final.c: 483: delay(300);
"483
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR31_final.c: 484: RB5=0;
"484
[e = _RB5 -> -> 0 `i `b ]
[; ;PR31_final.c: 485: delay(300);
"485
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR31_final.c: 486: }
"486
[e :UE 251 ]
}
"488
[v _lcd_goto `(v ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 487: void lcd_goto(unsigned char RC4)
[; ;PR31_final.c: 488: {
[e :U _lcd_goto ]
[v _RC4 `uc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 489: if(RC4<16)
"489
[e $ ! < -> _RC4 `i -> 16 `i 253  ]
[; ;PR31_final.c: 490: {
"490
{
[; ;PR31_final.c: 491: send_config(0x80+RC4);
"491
[e ( _send_config (1 -> + -> 128 `i -> _RC4 `i `uc ]
"492
}
[; ;PR31_final.c: 492: }
[e $U 254  ]
"493
[e :U 253 ]
[; ;PR31_final.c: 493: else
[; ;PR31_final.c: 494: {
"494
{
[; ;PR31_final.c: 495: RC4=RC4-20;
"495
[e = _RC4 -> - -> _RC4 `i -> 20 `i `uc ]
[; ;PR31_final.c: 496: send_config(0xc0+RC4);
"496
[e ( _send_config (1 -> + -> 192 `i -> _RC4 `i `uc ]
"497
}
[e :U 254 ]
[; ;PR31_final.c: 497: }
[; ;PR31_final.c: 498: }
"498
[e :UE 252 ]
}
"500
[v _lcd_clr `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 499: void lcd_clr(void)
[; ;PR31_final.c: 500: {
[e :U _lcd_clr ]
[f ]
[; ;PR31_final.c: 501: send_config(0b00000001);
"501
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR31_final.c: 502: send_config(0b00000010);
"502
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR31_final.c: 503: delay(350);
"503
[e ( _delay (1 -> -> -> 350 `i `l `ul ]
[; ;PR31_final.c: 504: }
"504
[e :UE 255 ]
}
"506
[v _send_string `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR31_final.c: 505: void send_string(const char *s)
[; ;PR31_final.c: 506: {
[e :U _send_string ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
"507
[v _i `uc ~T0 1 a ]
[; ;PR31_final.c: 507: unsigned char i=0;
[e = _i -> -> 0 `i `uc ]
[; ;PR31_final.c: 508: while (s && *s)send_char (*s++);
"508
[e $U 257  ]
[e :U 258 ]
[e ( _send_char (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 257 ]
[e $ && != _s -> -> 0 `i `*Cuc != -> *U _s `i -> -> -> 0 `i `Cuc `i 258  ]
[e :U 259 ]
[; ;PR31_final.c: 509: }
"509
[e :UE 256 ]
}
"516
[v _uart_init `(v ~T0 1 ef ]
{
[; ;PR31_final.c: 515: void uart_init (void)
[; ;PR31_final.c: 516: {
[e :U _uart_init ]
[f ]
[; ;PR31_final.c: 517: BRGH = 1;
"517
[e = _BRGH -> -> 1 `i `b ]
[; ;PR31_final.c: 518: SPBRG = (20000000 / 16 / 9600) - 1;
"518
[e = _SPBRG -> - / / -> 20000000 `l -> -> 16 `i `l -> -> 9600 `i `l -> -> 1 `i `l `uc ]
[; ;PR31_final.c: 519: SPEN = 1;
"519
[e = _SPEN -> -> 1 `i `b ]
[; ;PR31_final.c: 520: CREN = 1;
"520
[e = _CREN -> -> 1 `i `b ]
[; ;PR31_final.c: 521: TXEN = 1;
"521
[e = _TXEN -> -> 1 `i `b ]
[; ;PR31_final.c: 522: TRISC6 = 0;
"522
[e = _TRISC6 -> -> 0 `i `b ]
[; ;PR31_final.c: 523: TRISC7 = 1;
"523
[e = _TRISC7 -> -> 1 `i `b ]
[; ;PR31_final.c: 524: uart_tx(0x0C);
"524
[e ( _uart_tx (1 -> -> 12 `i `uc ]
[; ;PR31_final.c: 525: }
"525
[e :UE 260 ]
}
"528
[v _uart_tx `(v ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 527: void uart_tx (unsigned char uc_data)
[; ;PR31_final.c: 528: {
[e :U _uart_tx ]
[v _uc_data `uc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 529: while (TXIF == 0);
"529
[e $U 262  ]
[e :U 263 ]
[e :U 262 ]
[e $ == -> _TXIF `i -> 0 `i 263  ]
[e :U 264 ]
[; ;PR31_final.c: 530: TXREG = uc_data;
"530
[e = _TXREG _uc_data ]
[; ;PR31_final.c: 531: }
"531
[e :UE 261 ]
}
"534
[v _uart_rc `(uc ~T0 1 ef ]
{
[; ;PR31_final.c: 533: unsigned char uart_rc (void)
[; ;PR31_final.c: 534: {
[e :U _uart_rc ]
[f ]
[; ;PR31_final.c: 535: if (OERR == 1)
"535
[e $ ! == -> _OERR `i -> 1 `i 266  ]
[; ;PR31_final.c: 536: {
"536
{
[; ;PR31_final.c: 537: CREN = 0;
"537
[e = _CREN -> -> 0 `i `b ]
[; ;PR31_final.c: 538: CREN = 1;
"538
[e = _CREN -> -> 1 `i `b ]
"539
}
[e :U 266 ]
[; ;PR31_final.c: 539: }
[; ;PR31_final.c: 540: while (RCIF == 0);
"540
[e $U 267  ]
[e :U 268 ]
[e :U 267 ]
[e $ == -> _RCIF `i -> 0 `i 268  ]
[e :U 269 ]
[; ;PR31_final.c: 541: return RCREG;
"541
[e ) _RCREG ]
[e $UE 265  ]
[; ;PR31_final.c: 542: }
"542
[e :UE 265 ]
}
"545
[v _uart_sendstr `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR31_final.c: 544: void uart_sendstr(const char *s)
[; ;PR31_final.c: 545: {
[e :U _uart_sendstr ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
[; ;PR31_final.c: 546: uart_tx(0x0A);
"546
[e ( _uart_tx (1 -> -> 10 `i `uc ]
[; ;PR31_final.c: 547: uart_tx(0x0D);
"547
[e ( _uart_tx (1 -> -> 13 `i `uc ]
[; ;PR31_final.c: 549: while (*s != '\0')
"549
[e $U 271  ]
[e :U 272 ]
[; ;PR31_final.c: 550: {
"550
{
[; ;PR31_final.c: 551: uart_tx(*s);
"551
[e ( _uart_tx (1 *U _s ]
[; ;PR31_final.c: 552: s++;
"552
[e ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
"553
}
[e :U 271 ]
"549
[e $ != -> *U _s `ui -> 0 `ui 272  ]
[e :U 273 ]
[; ;PR31_final.c: 553: }
[; ;PR31_final.c: 555: }
"555
[e :UE 270 ]
}
"561
[v _eprom_read `(ui ~T0 1 ef1`uc ]
{
[; ;PR31_final.c: 560: unsigned int eprom_read (unsigned char channel_adr)
[; ;PR31_final.c: 561: {
[e :U _eprom_read ]
[v _channel_adr `uc ~T0 1 r1 ]
[f ]
"562
[v _fm_value `ui ~T0 1 a ]
[; ;PR31_final.c: 562: unsigned int fm_value;
[; ;PR31_final.c: 563: EEADR = channel_adr;
"563
[e = _EEADR _channel_adr ]
[; ;PR31_final.c: 564: EEPGD = 0;
"564
[e = _EEPGD -> -> 0 `i `b ]
[; ;PR31_final.c: 565: RD = 1;
"565
[e = _RD -> -> 1 `i `b ]
[; ;PR31_final.c: 566: while (RD == 1);
"566
[e $U 275  ]
[e :U 276 ]
[e :U 275 ]
[e $ == -> _RD `i -> 1 `i 276  ]
[e :U 277 ]
[; ;PR31_final.c: 567: fm_value = (EEDATA + 825);
"567
[e = _fm_value -> + -> _EEDATA `i -> 825 `i `ui ]
[; ;PR31_final.c: 569: return fm_value;
"569
[e ) _fm_value ]
[e $UE 274  ]
[; ;PR31_final.c: 570: }
"570
[e :UE 274 ]
}
"573
[v _eprom_write `(v ~T0 1 ef2`uc`ui ]
{
[; ;PR31_final.c: 572: void eprom_write (unsigned char channel_adr,unsigned int fm_value)
[; ;PR31_final.c: 573: {
[e :U _eprom_write ]
[v _channel_adr `uc ~T0 1 r1 ]
[v _fm_value `ui ~T0 1 r2 ]
[f ]
[; ;PR31_final.c: 574: EEADR = channel_adr;
"574
[e = _EEADR _channel_adr ]
[; ;PR31_final.c: 575: fm_value -= 825;
"575
[e =- _fm_value -> -> 825 `i `ui ]
[; ;PR31_final.c: 576: EEDATA = fm_value;
"576
[e = _EEDATA -> _fm_value `uc ]
[; ;PR31_final.c: 577: EEPGD = 0;
"577
[e = _EEPGD -> -> 0 `i `b ]
[; ;PR31_final.c: 578: WREN = 1;
"578
[e = _WREN -> -> 1 `i `b ]
[; ;PR31_final.c: 579: EECON2 = 0x55;
"579
[e = _EECON2 -> -> 85 `i `uc ]
[; ;PR31_final.c: 580: EECON2 = 0xAA;
"580
[e = _EECON2 -> -> 170 `i `uc ]
[; ;PR31_final.c: 581: WR = 1;
"581
[e = _WR -> -> 1 `i `b ]
[; ;PR31_final.c: 582: WREN = 0;
"582
[e = _WREN -> -> 0 `i `b ]
[; ;PR31_final.c: 583: while (WR == 1);
"583
[e $U 279  ]
[e :U 280 ]
[e :U 279 ]
[e $ == -> _WR `i -> 1 `i 280  ]
[e :U 281 ]
[; ;PR31_final.c: 584: }
"584
[e :UE 278 ]
}
[a 6C 115 119 49 40 49 115 41 61 115 101 116 0 ]
[a 7C 115 119 49 40 49 115 41 61 115 101 116 0 ]
[a 3C 80 82 51 49 32 61 32 68 105 103 105 116 97 108 32 82 97 100 105 111 0 ]
[a 2C 68 105 103 105 116 97 108 32 82 97 100 105 111 0 ]
[a 4C 115 119 49 61 99 104 97 110 32 115 119 50 61 118 111 108 0 ]
[a 5C 115 119 49 61 99 104 97 110 32 115 119 50 61 118 111 108 0 ]
[a 14C 32 115 101 116 116 101 100 0 ]
[a 15C 32 115 101 116 116 101 100 0 ]
[a 20C 70 77 61 0 ]
[a 21C 70 77 61 0 ]
[a 1C 80 82 51 49 32 58 0 ]
[a 10C 99 104 97 110 110 101 108 32 0 ]
[a 12C 99 104 97 110 110 101 108 32 0 ]
[a 13C 99 104 97 110 110 101 108 32 0 ]
[a 18C 99 104 97 110 110 101 108 32 0 ]
[a 19C 99 104 97 110 110 101 108 32 0 ]
[a 11C 67 104 97 110 110 101 108 32 0 ]
[a 8C 118 111 108 117 109 101 32 108 101 118 101 108 61 32 32 32 0 ]
[a 9C 118 111 108 117 109 101 32 108 101 118 101 108 61 32 32 32 0 ]
[a 16C 118 111 108 117 109 101 32 108 101 118 101 108 61 32 32 32 0 ]
[a 17C 118 111 108 117 109 101 32 108 101 118 101 108 61 32 32 32 0 ]
